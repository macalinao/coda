/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type { Codec, Decoder, Encoder, ReadonlyUint8Array } from "@solana/kit";
import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
} from "@solana/kit";

export interface ProofInfo {
  proof: ReadonlyUint8Array[];
}

export type ProofInfoArgs = ProofInfo;

export function getProofInfoEncoder(): Encoder<ProofInfoArgs> {
  return getStructEncoder([
    ["proof", getArrayEncoder(fixEncoderSize(getBytesEncoder(), 32))],
  ]);
}

export function getProofInfoDecoder(): Decoder<ProofInfo> {
  return getStructDecoder([
    ["proof", getArrayDecoder(fixDecoderSize(getBytesDecoder(), 32))],
  ]);
}

export function getProofInfoCodec(): Codec<ProofInfoArgs, ProofInfo> {
  return combineCodec(getProofInfoEncoder(), getProofInfoDecoder());
}
