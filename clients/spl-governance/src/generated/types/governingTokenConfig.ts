/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  Codec,
  Decoder,
  Encoder,
  Option,
  OptionOrNullable,
} from "@solana/kit";
import type { GoverningTokenType, GoverningTokenTypeArgs } from "./index.js";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
} from "@solana/kit";
import {
  getGoverningTokenTypeDecoder,
  getGoverningTokenTypeEncoder,
} from "./index.js";

export interface GoverningTokenConfig {
  voterWeightAddin: Option<Address>;
  maxVoterWeightAddin: Option<Address>;
  tokenType: GoverningTokenType;
  reserved: number[];
}

export interface GoverningTokenConfigArgs {
  voterWeightAddin: OptionOrNullable<Address>;
  maxVoterWeightAddin: OptionOrNullable<Address>;
  tokenType: GoverningTokenTypeArgs;
  reserved: number[];
}

export function getGoverningTokenConfigEncoder(): Encoder<GoverningTokenConfigArgs> {
  return getStructEncoder([
    ["voterWeightAddin", getOptionEncoder(getAddressEncoder())],
    ["maxVoterWeightAddin", getOptionEncoder(getAddressEncoder())],
    ["tokenType", getGoverningTokenTypeEncoder()],
    ["reserved", getArrayEncoder(getU8Encoder(), { size: 8 })],
  ]);
}

export function getGoverningTokenConfigDecoder(): Decoder<GoverningTokenConfig> {
  return getStructDecoder([
    ["voterWeightAddin", getOptionDecoder(getAddressDecoder())],
    ["maxVoterWeightAddin", getOptionDecoder(getAddressDecoder())],
    ["tokenType", getGoverningTokenTypeDecoder()],
    ["reserved", getArrayDecoder(getU8Decoder(), { size: 8 })],
  ]);
}

export function getGoverningTokenConfigCodec(): Codec<
  GoverningTokenConfigArgs,
  GoverningTokenConfig
> {
  return combineCodec(
    getGoverningTokenConfigEncoder(),
    getGoverningTokenConfigDecoder(),
  );
}
