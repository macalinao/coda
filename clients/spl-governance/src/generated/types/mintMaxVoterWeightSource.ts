/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
  GetDiscriminatedUnionVariant,
  GetDiscriminatedUnionVariantContent,
} from "@solana/kit";
import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";

export type MintMaxVoterWeightSource =
  | { __kind: "SupplyFraction"; fields: readonly [bigint] }
  | { __kind: "Absolute"; fields: readonly [bigint] };

export type MintMaxVoterWeightSourceArgs =
  | { __kind: "SupplyFraction"; fields: readonly [number | bigint] }
  | { __kind: "Absolute"; fields: readonly [number | bigint] };

export function getMintMaxVoterWeightSourceEncoder(): FixedSizeEncoder<MintMaxVoterWeightSourceArgs> {
  return getDiscriminatedUnionEncoder([
    [
      "SupplyFraction",
      getStructEncoder([["fields", getTupleEncoder([getU64Encoder()])]]),
    ],
    [
      "Absolute",
      getStructEncoder([["fields", getTupleEncoder([getU64Encoder()])]]),
    ],
  ]) as FixedSizeEncoder<MintMaxVoterWeightSourceArgs>;
}

export function getMintMaxVoterWeightSourceDecoder(): FixedSizeDecoder<MintMaxVoterWeightSource> {
  return getDiscriminatedUnionDecoder([
    [
      "SupplyFraction",
      getStructDecoder([["fields", getTupleDecoder([getU64Decoder()])]]),
    ],
    [
      "Absolute",
      getStructDecoder([["fields", getTupleDecoder([getU64Decoder()])]]),
    ],
  ]) as FixedSizeDecoder<MintMaxVoterWeightSource>;
}

export function getMintMaxVoterWeightSourceCodec(): FixedSizeCodec<
  MintMaxVoterWeightSourceArgs,
  MintMaxVoterWeightSource
> {
  return combineCodec(
    getMintMaxVoterWeightSourceEncoder(),
    getMintMaxVoterWeightSourceDecoder(),
  );
}

// Data Enum Helpers.
export function mintMaxVoterWeightSource(
  kind: "SupplyFraction",
  data: GetDiscriminatedUnionVariantContent<
    MintMaxVoterWeightSourceArgs,
    "__kind",
    "SupplyFraction"
  >["fields"],
): GetDiscriminatedUnionVariant<
  MintMaxVoterWeightSourceArgs,
  "__kind",
  "SupplyFraction"
>;
export function mintMaxVoterWeightSource(
  kind: "Absolute",
  data: GetDiscriminatedUnionVariantContent<
    MintMaxVoterWeightSourceArgs,
    "__kind",
    "Absolute"
  >["fields"],
): GetDiscriminatedUnionVariant<
  MintMaxVoterWeightSourceArgs,
  "__kind",
  "Absolute"
>;
export function mintMaxVoterWeightSource<
  K extends MintMaxVoterWeightSourceArgs["__kind"],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isMintMaxVoterWeightSource<
  K extends MintMaxVoterWeightSource["__kind"],
>(
  kind: K,
  value: MintMaxVoterWeightSource,
): value is MintMaxVoterWeightSource & { __kind: K } {
  return value.__kind === kind;
}
