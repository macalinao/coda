/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  Codec,
  Decoder,
  Encoder,
  Option,
  OptionOrNullable,
} from "@solana/kit";
import type {
  MintMaxVoterWeightSource,
  MintMaxVoterWeightSourceArgs,
} from "./index.js";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";
import {
  getMintMaxVoterWeightSourceDecoder,
  getMintMaxVoterWeightSourceEncoder,
} from "./index.js";

export interface RealmConfig {
  legacy1: number;
  legacy2: number;
  reserved: number[];
  minCommunityWeightToCreateGovernance: bigint;
  communityMintMaxVoterWeightSource: MintMaxVoterWeightSource;
  councilMint: Option<Address>;
}

export interface RealmConfigArgs {
  legacy1: number;
  legacy2: number;
  reserved: number[];
  minCommunityWeightToCreateGovernance: number | bigint;
  communityMintMaxVoterWeightSource: MintMaxVoterWeightSourceArgs;
  councilMint: OptionOrNullable<Address>;
}

export function getRealmConfigEncoder(): Encoder<RealmConfigArgs> {
  return getStructEncoder([
    ["legacy1", getU8Encoder()],
    ["legacy2", getU8Encoder()],
    ["reserved", getArrayEncoder(getU8Encoder(), { size: 6 })],
    ["minCommunityWeightToCreateGovernance", getU64Encoder()],
    ["communityMintMaxVoterWeightSource", getMintMaxVoterWeightSourceEncoder()],
    ["councilMint", getOptionEncoder(getAddressEncoder())],
  ]);
}

export function getRealmConfigDecoder(): Decoder<RealmConfig> {
  return getStructDecoder([
    ["legacy1", getU8Decoder()],
    ["legacy2", getU8Decoder()],
    ["reserved", getArrayDecoder(getU8Decoder(), { size: 6 })],
    ["minCommunityWeightToCreateGovernance", getU64Decoder()],
    ["communityMintMaxVoterWeightSource", getMintMaxVoterWeightSourceDecoder()],
    ["councilMint", getOptionDecoder(getAddressDecoder())],
  ]);
}

export function getRealmConfigCodec(): Codec<RealmConfigArgs, RealmConfig> {
  return combineCodec(getRealmConfigEncoder(), getRealmConfigDecoder());
}
