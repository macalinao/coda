/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import type { GoverningTokenType, GoverningTokenTypeArgs } from "./index.js";
import {
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
} from "@solana/kit";
import {
  getGoverningTokenTypeDecoder,
  getGoverningTokenTypeEncoder,
} from "./index.js";

export interface GoverningTokenConfigParams {
  useVoterWeightAddin: boolean;
  useMaxVoterWeightAddin: boolean;
  tokenType: GoverningTokenType;
}

export interface GoverningTokenConfigParamsArgs {
  useVoterWeightAddin: boolean;
  useMaxVoterWeightAddin: boolean;
  tokenType: GoverningTokenTypeArgs;
}

export function getGoverningTokenConfigParamsEncoder(): FixedSizeEncoder<GoverningTokenConfigParamsArgs> {
  return getStructEncoder([
    ["useVoterWeightAddin", getBooleanEncoder()],
    ["useMaxVoterWeightAddin", getBooleanEncoder()],
    ["tokenType", getGoverningTokenTypeEncoder()],
  ]);
}

export function getGoverningTokenConfigParamsDecoder(): FixedSizeDecoder<GoverningTokenConfigParams> {
  return getStructDecoder([
    ["useVoterWeightAddin", getBooleanDecoder()],
    ["useMaxVoterWeightAddin", getBooleanDecoder()],
    ["tokenType", getGoverningTokenTypeDecoder()],
  ]);
}

export function getGoverningTokenConfigParamsCodec(): FixedSizeCodec<
  GoverningTokenConfigParamsArgs,
  GoverningTokenConfigParams
> {
  return combineCodec(
    getGoverningTokenConfigParamsEncoder(),
    getGoverningTokenConfigParamsDecoder(),
  );
}
