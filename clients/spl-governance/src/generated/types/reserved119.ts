/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
} from "@solana/kit";

export interface Reserved119 {
  reserved64: number[];
  reserved32: number[];
  reserved23: number[];
}

export type Reserved119Args = Reserved119;

export function getReserved119Encoder(): FixedSizeEncoder<Reserved119Args> {
  return getStructEncoder([
    ["reserved64", getArrayEncoder(getU8Encoder(), { size: 64 })],
    ["reserved32", getArrayEncoder(getU8Encoder(), { size: 32 })],
    ["reserved23", getArrayEncoder(getU8Encoder(), { size: 23 })],
  ]);
}

export function getReserved119Decoder(): FixedSizeDecoder<Reserved119> {
  return getStructDecoder([
    ["reserved64", getArrayDecoder(getU8Decoder(), { size: 64 })],
    ["reserved32", getArrayDecoder(getU8Decoder(), { size: 32 })],
    ["reserved23", getArrayDecoder(getU8Decoder(), { size: 23 })],
  ]);
}

export function getReserved119Codec(): FixedSizeCodec<
  Reserved119Args,
  Reserved119
> {
  return combineCodec(getReserved119Encoder(), getReserved119Decoder());
}
