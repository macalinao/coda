/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type { Codec, Decoder, Encoder } from "@solana/kit";
import type { OptionVoteResult, OptionVoteResultArgs } from "./index.js";
import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
} from "@solana/kit";
import {
  getOptionVoteResultDecoder,
  getOptionVoteResultEncoder,
} from "./index.js";

export interface ProposalOption {
  label: string;
  voteWeight: bigint;
  voteResult: OptionVoteResult;
  transactionsExecutedCount: number;
  transactionsCount: number;
  transactionsNextIndex: number;
}

export interface ProposalOptionArgs {
  label: string;
  voteWeight: number | bigint;
  voteResult: OptionVoteResultArgs;
  transactionsExecutedCount: number;
  transactionsCount: number;
  transactionsNextIndex: number;
}

export function getProposalOptionEncoder(): Encoder<ProposalOptionArgs> {
  return getStructEncoder([
    ["label", addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ["voteWeight", getU64Encoder()],
    ["voteResult", getOptionVoteResultEncoder()],
    ["transactionsExecutedCount", getU16Encoder()],
    ["transactionsCount", getU16Encoder()],
    ["transactionsNextIndex", getU16Encoder()],
  ]);
}

export function getProposalOptionDecoder(): Decoder<ProposalOption> {
  return getStructDecoder([
    ["label", addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ["voteWeight", getU64Decoder()],
    ["voteResult", getOptionVoteResultDecoder()],
    ["transactionsExecutedCount", getU16Decoder()],
    ["transactionsCount", getU16Decoder()],
    ["transactionsNextIndex", getU16Decoder()],
  ]);
}

export function getProposalOptionCodec(): Codec<
  ProposalOptionArgs,
  ProposalOption
> {
  return combineCodec(getProposalOptionEncoder(), getProposalOptionDecoder());
}
