/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
} from "@solana/kit";

/**
 * Wrapper struct that can be `Pod`, containing a byte that *should* be a valid
 * `StakeStatus` underneath.
 */
export interface PodStakeStatus {
  /** Pod stake status */
  status: number;
}

export type PodStakeStatusArgs = PodStakeStatus;

export function getPodStakeStatusEncoder(): FixedSizeEncoder<PodStakeStatusArgs> {
  return getStructEncoder([["status", getU8Encoder()]]);
}

export function getPodStakeStatusDecoder(): FixedSizeDecoder<PodStakeStatus> {
  return getStructDecoder([["status", getU8Decoder()]]);
}

export function getPodStakeStatusCodec(): FixedSizeCodec<
  PodStakeStatusArgs,
  PodStakeStatus
> {
  return combineCodec(getPodStakeStatusEncoder(), getPodStakeStatusDecoder());
}
