/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Codec,
  Decoder,
  Encoder,
  Option,
  OptionOrNullable,
} from "@solana/kit";
import type { DataV2, DataV2Args } from "./index.js";
import {
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
} from "@solana/kit";
import { getDataV2Decoder, getDataV2Encoder } from "./index.js";

export interface CreateMetadataAccountArgsV3 {
  /** Note that unique metadata is disabled for now. */
  data: DataV2;
  /** Whether you want your metadata to be changeable in the future. */
  isMutable: boolean;
  /** UNUSED If this is a collection parent NFT. */
  collectionDetails: Option<number>;
}

export interface CreateMetadataAccountArgsV3Args {
  /** Note that unique metadata is disabled for now. */
  data: DataV2Args;
  /** Whether you want your metadata to be changeable in the future. */
  isMutable: boolean;
  /** UNUSED If this is a collection parent NFT. */
  collectionDetails: OptionOrNullable<number>;
}

export function getCreateMetadataAccountArgsV3Encoder(): Encoder<CreateMetadataAccountArgsV3Args> {
  return getStructEncoder([
    ["data", getDataV2Encoder()],
    ["isMutable", getBooleanEncoder()],
    ["collectionDetails", getOptionEncoder(getU8Encoder())],
  ]);
}

export function getCreateMetadataAccountArgsV3Decoder(): Decoder<CreateMetadataAccountArgsV3> {
  return getStructDecoder([
    ["data", getDataV2Decoder()],
    ["isMutable", getBooleanDecoder()],
    ["collectionDetails", getOptionDecoder(getU8Decoder())],
  ]);
}

export function getCreateMetadataAccountArgsV3Codec(): Codec<
  CreateMetadataAccountArgsV3Args,
  CreateMetadataAccountArgsV3
> {
  return combineCodec(
    getCreateMetadataAccountArgsV3Encoder(),
    getCreateMetadataAccountArgsV3Decoder(),
  );
}
