/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import type { BigFractionBytes, BigFractionBytesArgs } from "./index.js";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU128Decoder,
  getU128Encoder,
} from "@solana/kit";
import {
  getBigFractionBytesDecoder,
  getBigFractionBytesEncoder,
} from "./index.js";

export interface ObligationLiquidity {
  borrowReserve: Address;
  cumulativeBorrowRateBsf: BigFractionBytes;
  padding: bigint;
  borrowedAmountSf: bigint;
  marketValueSf: bigint;
  borrowFactorAdjustedMarketValueSf: bigint;
  borrowedAmountOutsideElevationGroups: bigint;
  padding2: bigint[];
}

export interface ObligationLiquidityArgs {
  borrowReserve: Address;
  cumulativeBorrowRateBsf: BigFractionBytesArgs;
  padding: number | bigint;
  borrowedAmountSf: number | bigint;
  marketValueSf: number | bigint;
  borrowFactorAdjustedMarketValueSf: number | bigint;
  borrowedAmountOutsideElevationGroups: number | bigint;
  padding2: (number | bigint)[];
}

export function getObligationLiquidityEncoder(): FixedSizeEncoder<ObligationLiquidityArgs> {
  return getStructEncoder([
    ["borrowReserve", getAddressEncoder()],
    ["cumulativeBorrowRateBsf", getBigFractionBytesEncoder()],
    ["padding", getU64Encoder()],
    ["borrowedAmountSf", getU128Encoder()],
    ["marketValueSf", getU128Encoder()],
    ["borrowFactorAdjustedMarketValueSf", getU128Encoder()],
    ["borrowedAmountOutsideElevationGroups", getU64Encoder()],
    ["padding2", getArrayEncoder(getU64Encoder(), { size: 7 })],
  ]);
}

export function getObligationLiquidityDecoder(): FixedSizeDecoder<ObligationLiquidity> {
  return getStructDecoder([
    ["borrowReserve", getAddressDecoder()],
    ["cumulativeBorrowRateBsf", getBigFractionBytesDecoder()],
    ["padding", getU64Decoder()],
    ["borrowedAmountSf", getU128Decoder()],
    ["marketValueSf", getU128Decoder()],
    ["borrowFactorAdjustedMarketValueSf", getU128Decoder()],
    ["borrowedAmountOutsideElevationGroups", getU64Decoder()],
    ["padding2", getArrayDecoder(getU64Decoder(), { size: 7 })],
  ]);
}

export function getObligationLiquidityCodec(): FixedSizeCodec<
  ObligationLiquidityArgs,
  ObligationLiquidity
> {
  return combineCodec(
    getObligationLiquidityEncoder(),
    getObligationLiquidityDecoder(),
  );
}
