/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";

/**
 * Additional fee information on a reserve
 *
 * These exist separately from interest accrual fees, and are specifically for the program owner
 * and referral fee. The fees are paid out as a percentage of liquidity token amounts during
 * repayments and liquidations.
 */
export interface ReserveFees {
  /**
   * Fee assessed on `BorrowObligationLiquidity`, as scaled fraction (60 bits fractional part)
   * Must be between `0` and `2^60`, such that `2^60 = 1`.  A few examples for
   * clarity:
   * 1% = (1 << 60) / 100 = 11529215046068470
   * 0.01% (1 basis point) = 115292150460685
   * 0.00001% (Aave borrow fee) = 115292150461
   */
  borrowFeeSf: bigint;
  /**
   * Fee for flash loan, expressed as scaled fraction.
   * 0.3% (Aave flash loan fee) = 0.003 * 2^60 = 3458764513820541
   */
  flashLoanFeeSf: bigint;
  /** Used for allignment */
  padding: number[];
}

export interface ReserveFeesArgs {
  /**
   * Fee assessed on `BorrowObligationLiquidity`, as scaled fraction (60 bits fractional part)
   * Must be between `0` and `2^60`, such that `2^60 = 1`.  A few examples for
   * clarity:
   * 1% = (1 << 60) / 100 = 11529215046068470
   * 0.01% (1 basis point) = 115292150460685
   * 0.00001% (Aave borrow fee) = 115292150461
   */
  borrowFeeSf: number | bigint;
  /**
   * Fee for flash loan, expressed as scaled fraction.
   * 0.3% (Aave flash loan fee) = 0.003 * 2^60 = 3458764513820541
   */
  flashLoanFeeSf: number | bigint;
  /** Used for allignment */
  padding: number[];
}

export function getReserveFeesEncoder(): FixedSizeEncoder<ReserveFeesArgs> {
  return getStructEncoder([
    ["borrowFeeSf", getU64Encoder()],
    ["flashLoanFeeSf", getU64Encoder()],
    ["padding", getArrayEncoder(getU8Encoder(), { size: 8 })],
  ]);
}

export function getReserveFeesDecoder(): FixedSizeDecoder<ReserveFees> {
  return getStructDecoder([
    ["borrowFeeSf", getU64Decoder()],
    ["flashLoanFeeSf", getU64Decoder()],
    ["padding", getArrayDecoder(getU8Decoder(), { size: 8 })],
  ]);
}

export function getReserveFeesCodec(): FixedSizeCodec<
  ReserveFeesArgs,
  ReserveFees
> {
  return combineCodec(getReserveFeesEncoder(), getReserveFeesDecoder());
}
