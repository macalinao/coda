/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";

export interface ElevationGroup {
  maxLiquidationBonusBps: number;
  id: number;
  ltvPct: number;
  liquidationThresholdPct: number;
  allowNewLoans: number;
  maxReservesAsCollateral: number;
  padding0: number;
  debtReserve: Address;
  padding1: bigint[];
}

export interface ElevationGroupArgs {
  maxLiquidationBonusBps: number;
  id: number;
  ltvPct: number;
  liquidationThresholdPct: number;
  allowNewLoans: number;
  maxReservesAsCollateral: number;
  padding0: number;
  debtReserve: Address;
  padding1: (number | bigint)[];
}

export function getElevationGroupEncoder(): FixedSizeEncoder<ElevationGroupArgs> {
  return getStructEncoder([
    ["maxLiquidationBonusBps", getU16Encoder()],
    ["id", getU8Encoder()],
    ["ltvPct", getU8Encoder()],
    ["liquidationThresholdPct", getU8Encoder()],
    ["allowNewLoans", getU8Encoder()],
    ["maxReservesAsCollateral", getU8Encoder()],
    ["padding0", getU8Encoder()],
    ["debtReserve", getAddressEncoder()],
    ["padding1", getArrayEncoder(getU64Encoder(), { size: 4 })],
  ]);
}

export function getElevationGroupDecoder(): FixedSizeDecoder<ElevationGroup> {
  return getStructDecoder([
    ["maxLiquidationBonusBps", getU16Decoder()],
    ["id", getU8Decoder()],
    ["ltvPct", getU8Decoder()],
    ["liquidationThresholdPct", getU8Decoder()],
    ["allowNewLoans", getU8Decoder()],
    ["maxReservesAsCollateral", getU8Decoder()],
    ["padding0", getU8Decoder()],
    ["debtReserve", getAddressDecoder()],
    ["padding1", getArrayDecoder(getU64Decoder(), { size: 4 })],
  ]);
}

export function getElevationGroupCodec(): FixedSizeCodec<
  ElevationGroupArgs,
  ElevationGroup
> {
  return combineCodec(getElevationGroupEncoder(), getElevationGroupDecoder());
}
