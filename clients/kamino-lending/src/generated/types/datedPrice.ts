/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";
import type { Price, PriceArgs } from "./index.js";
import { getPriceDecoder, getPriceEncoder } from "./index.js";

export interface DatedPrice {
  price: Price;
  lastUpdatedSlot: bigint;
  unixTimestamp: bigint;
  reserved: bigint[];
  reserved2: number[];
  index: number;
}

export interface DatedPriceArgs {
  price: PriceArgs;
  lastUpdatedSlot: number | bigint;
  unixTimestamp: number | bigint;
  reserved: (number | bigint)[];
  reserved2: number[];
  index: number;
}

export function getDatedPriceEncoder(): FixedSizeEncoder<DatedPriceArgs> {
  return getStructEncoder([
    ["price", getPriceEncoder()],
    ["lastUpdatedSlot", getU64Encoder()],
    ["unixTimestamp", getU64Encoder()],
    ["reserved", getArrayEncoder(getU64Encoder(), { size: 2 })],
    ["reserved2", getArrayEncoder(getU16Encoder(), { size: 3 })],
    ["index", getU16Encoder()],
  ]);
}

export function getDatedPriceDecoder(): FixedSizeDecoder<DatedPrice> {
  return getStructDecoder([
    ["price", getPriceDecoder()],
    ["lastUpdatedSlot", getU64Decoder()],
    ["unixTimestamp", getU64Decoder()],
    ["reserved", getArrayDecoder(getU64Decoder(), { size: 2 })],
    ["reserved2", getArrayDecoder(getU16Decoder(), { size: 3 })],
    ["index", getU16Decoder()],
  ]);
}

export function getDatedPriceCodec(): FixedSizeCodec<
  DatedPriceArgs,
  DatedPrice
> {
  return combineCodec(getDatedPriceEncoder(), getDatedPriceDecoder());
}
