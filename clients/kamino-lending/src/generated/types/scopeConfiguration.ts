/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
} from "@solana/kit";

export interface ScopeConfiguration {
  priceFeed: Address;
  priceChain: number[];
  twapChain: number[];
}

export type ScopeConfigurationArgs = ScopeConfiguration;

export function getScopeConfigurationEncoder(): FixedSizeEncoder<ScopeConfigurationArgs> {
  return getStructEncoder([
    ["priceFeed", getAddressEncoder()],
    ["priceChain", getArrayEncoder(getU16Encoder(), { size: 4 })],
    ["twapChain", getArrayEncoder(getU16Encoder(), { size: 4 })],
  ]);
}

export function getScopeConfigurationDecoder(): FixedSizeDecoder<ScopeConfiguration> {
  return getStructDecoder([
    ["priceFeed", getAddressDecoder()],
    ["priceChain", getArrayDecoder(getU16Decoder(), { size: 4 })],
    ["twapChain", getArrayDecoder(getU16Decoder(), { size: 4 })],
  ]);
}

export function getScopeConfigurationCodec(): FixedSizeCodec<
  ScopeConfigurationArgs,
  ScopeConfiguration
> {
  return combineCodec(
    getScopeConfigurationEncoder(),
    getScopeConfigurationDecoder(),
  );
}
