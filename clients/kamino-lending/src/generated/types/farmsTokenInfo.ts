/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";

export interface FarmsTokenInfo {
  mint: Address;
  decimals: bigint;
  tokenProgram: Address;
  padding: bigint[];
}

export interface FarmsTokenInfoArgs {
  mint: Address;
  decimals: number | bigint;
  tokenProgram: Address;
  padding: (number | bigint)[];
}

export function getFarmsTokenInfoEncoder(): FixedSizeEncoder<FarmsTokenInfoArgs> {
  return getStructEncoder([
    ["mint", getAddressEncoder()],
    ["decimals", getU64Encoder()],
    ["tokenProgram", getAddressEncoder()],
    ["padding", getArrayEncoder(getU64Encoder(), { size: 6 })],
  ]);
}

export function getFarmsTokenInfoDecoder(): FixedSizeDecoder<FarmsTokenInfo> {
  return getStructDecoder([
    ["mint", getAddressDecoder()],
    ["decimals", getU64Decoder()],
    ["tokenProgram", getAddressDecoder()],
    ["padding", getArrayDecoder(getU64Decoder(), { size: 6 })],
  ]);
}

export function getFarmsTokenInfoCodec(): FixedSizeCodec<
  FarmsTokenInfoArgs,
  FarmsTokenInfo
> {
  return combineCodec(getFarmsTokenInfoEncoder(), getFarmsTokenInfoDecoder());
}
