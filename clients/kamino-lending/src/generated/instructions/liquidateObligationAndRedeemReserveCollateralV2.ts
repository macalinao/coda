/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  AccountMeta,
  AccountSignerMeta,
  Address,
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
  Instruction,
  InstructionWithAccounts,
  InstructionWithData,
  ReadonlyAccount,
  ReadonlySignerAccount,
  ReadonlyUint8Array,
  TransactionSigner,
  WritableAccount,
} from "@solana/kit";
import type { ResolvedAccount } from "../shared/index.js";
import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  transformEncoder,
} from "@solana/kit";
import { KAMINO_LENDING_PROGRAM_ADDRESS } from "../programs/index.js";
import { getAccountMetaFactory } from "../shared/index.js";

export const LIQUIDATE_OBLIGATION_AND_REDEEM_RESERVE_COLLATERAL_V2_DISCRIMINATOR: ReadonlyUint8Array =
  new Uint8Array([162, 161, 35, 143, 30, 187, 185, 103]);

export function getLiquidateObligationAndRedeemReserveCollateralV2DiscriminatorBytes(): ReadonlyUint8Array {
  return fixEncoderSize(getBytesEncoder(), 8).encode(
    LIQUIDATE_OBLIGATION_AND_REDEEM_RESERVE_COLLATERAL_V2_DISCRIMINATOR,
  );
}

export type LiquidateObligationAndRedeemReserveCollateralV2Instruction<
  TProgram extends string = typeof KAMINO_LENDING_PROGRAM_ADDRESS,
  TAccountLiquidationAccountsLiquidator extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsObligation extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsLendingMarket extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsLendingMarketAuthority extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsRepayReserve extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsRepayReserveLiquidityMint extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsRepayReserveLiquiditySupply extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsWithdrawReserve extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsWithdrawReserveLiquidityMint extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsWithdrawReserveCollateralMint extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsWithdrawReserveCollateralSupply extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsWithdrawReserveLiquiditySupply extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsWithdrawReserveLiquidityFeeReceiver extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsUserSourceLiquidity extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsUserDestinationCollateral extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsUserDestinationLiquidity extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsCollateralTokenProgram extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsRepayLiquidityTokenProgram extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsWithdrawLiquidityTokenProgram extends
    | string
    | AccountMeta = string,
  TAccountLiquidationAccountsInstructionSysvarAccount extends
    | string
    | AccountMeta = "Sysvar1nstructions1111111111111111111111111",
  TAccountCollateralFarmsAccountsV2ObligationFarmUserState extends
    | string
    | AccountMeta = string,
  TAccountCollateralFarmsAccountsV2ReserveFarmState extends
    | string
    | AccountMeta = string,
  TAccountDebtFarmsAccountsObligationFarmUserState extends
    | string
    | AccountMeta = string,
  TAccountDebtFarmsAccountsReserveFarmState extends
    | string
    | AccountMeta = string,
  TAccountFarmsProgram extends string | AccountMeta = string,
  TRemainingAccounts extends readonly AccountMeta[] = [],
> = Instruction<TProgram> &
  InstructionWithData<ReadonlyUint8Array> &
  InstructionWithAccounts<
    [
      TAccountLiquidationAccountsLiquidator extends string
        ? ReadonlySignerAccount<TAccountLiquidationAccountsLiquidator> &
            AccountSignerMeta<TAccountLiquidationAccountsLiquidator>
        : TAccountLiquidationAccountsLiquidator,
      TAccountLiquidationAccountsObligation extends string
        ? WritableAccount<TAccountLiquidationAccountsObligation>
        : TAccountLiquidationAccountsObligation,
      TAccountLiquidationAccountsLendingMarket extends string
        ? ReadonlyAccount<TAccountLiquidationAccountsLendingMarket>
        : TAccountLiquidationAccountsLendingMarket,
      TAccountLiquidationAccountsLendingMarketAuthority extends string
        ? ReadonlyAccount<TAccountLiquidationAccountsLendingMarketAuthority>
        : TAccountLiquidationAccountsLendingMarketAuthority,
      TAccountLiquidationAccountsRepayReserve extends string
        ? WritableAccount<TAccountLiquidationAccountsRepayReserve>
        : TAccountLiquidationAccountsRepayReserve,
      TAccountLiquidationAccountsRepayReserveLiquidityMint extends string
        ? ReadonlyAccount<TAccountLiquidationAccountsRepayReserveLiquidityMint>
        : TAccountLiquidationAccountsRepayReserveLiquidityMint,
      TAccountLiquidationAccountsRepayReserveLiquiditySupply extends string
        ? WritableAccount<TAccountLiquidationAccountsRepayReserveLiquiditySupply>
        : TAccountLiquidationAccountsRepayReserveLiquiditySupply,
      TAccountLiquidationAccountsWithdrawReserve extends string
        ? WritableAccount<TAccountLiquidationAccountsWithdrawReserve>
        : TAccountLiquidationAccountsWithdrawReserve,
      TAccountLiquidationAccountsWithdrawReserveLiquidityMint extends string
        ? ReadonlyAccount<TAccountLiquidationAccountsWithdrawReserveLiquidityMint>
        : TAccountLiquidationAccountsWithdrawReserveLiquidityMint,
      TAccountLiquidationAccountsWithdrawReserveCollateralMint extends string
        ? WritableAccount<TAccountLiquidationAccountsWithdrawReserveCollateralMint>
        : TAccountLiquidationAccountsWithdrawReserveCollateralMint,
      TAccountLiquidationAccountsWithdrawReserveCollateralSupply extends string
        ? WritableAccount<TAccountLiquidationAccountsWithdrawReserveCollateralSupply>
        : TAccountLiquidationAccountsWithdrawReserveCollateralSupply,
      TAccountLiquidationAccountsWithdrawReserveLiquiditySupply extends string
        ? WritableAccount<TAccountLiquidationAccountsWithdrawReserveLiquiditySupply>
        : TAccountLiquidationAccountsWithdrawReserveLiquiditySupply,
      TAccountLiquidationAccountsWithdrawReserveLiquidityFeeReceiver extends string
        ? WritableAccount<TAccountLiquidationAccountsWithdrawReserveLiquidityFeeReceiver>
        : TAccountLiquidationAccountsWithdrawReserveLiquidityFeeReceiver,
      TAccountLiquidationAccountsUserSourceLiquidity extends string
        ? WritableAccount<TAccountLiquidationAccountsUserSourceLiquidity>
        : TAccountLiquidationAccountsUserSourceLiquidity,
      TAccountLiquidationAccountsUserDestinationCollateral extends string
        ? WritableAccount<TAccountLiquidationAccountsUserDestinationCollateral>
        : TAccountLiquidationAccountsUserDestinationCollateral,
      TAccountLiquidationAccountsUserDestinationLiquidity extends string
        ? WritableAccount<TAccountLiquidationAccountsUserDestinationLiquidity>
        : TAccountLiquidationAccountsUserDestinationLiquidity,
      TAccountLiquidationAccountsCollateralTokenProgram extends string
        ? ReadonlyAccount<TAccountLiquidationAccountsCollateralTokenProgram>
        : TAccountLiquidationAccountsCollateralTokenProgram,
      TAccountLiquidationAccountsRepayLiquidityTokenProgram extends string
        ? ReadonlyAccount<TAccountLiquidationAccountsRepayLiquidityTokenProgram>
        : TAccountLiquidationAccountsRepayLiquidityTokenProgram,
      TAccountLiquidationAccountsWithdrawLiquidityTokenProgram extends string
        ? ReadonlyAccount<TAccountLiquidationAccountsWithdrawLiquidityTokenProgram>
        : TAccountLiquidationAccountsWithdrawLiquidityTokenProgram,
      TAccountLiquidationAccountsInstructionSysvarAccount extends string
        ? ReadonlyAccount<TAccountLiquidationAccountsInstructionSysvarAccount>
        : TAccountLiquidationAccountsInstructionSysvarAccount,
      TAccountCollateralFarmsAccountsV2ObligationFarmUserState extends string
        ? WritableAccount<TAccountCollateralFarmsAccountsV2ObligationFarmUserState>
        : TAccountCollateralFarmsAccountsV2ObligationFarmUserState,
      TAccountCollateralFarmsAccountsV2ReserveFarmState extends string
        ? WritableAccount<TAccountCollateralFarmsAccountsV2ReserveFarmState>
        : TAccountCollateralFarmsAccountsV2ReserveFarmState,
      TAccountDebtFarmsAccountsObligationFarmUserState extends string
        ? WritableAccount<TAccountDebtFarmsAccountsObligationFarmUserState>
        : TAccountDebtFarmsAccountsObligationFarmUserState,
      TAccountDebtFarmsAccountsReserveFarmState extends string
        ? WritableAccount<TAccountDebtFarmsAccountsReserveFarmState>
        : TAccountDebtFarmsAccountsReserveFarmState,
      TAccountFarmsProgram extends string
        ? ReadonlyAccount<TAccountFarmsProgram>
        : TAccountFarmsProgram,
      ...TRemainingAccounts,
    ]
  >;

export interface LiquidateObligationAndRedeemReserveCollateralV2InstructionData {
  discriminator: ReadonlyUint8Array;
  liquidityAmount: bigint;
  minAcceptableReceivedLiquidityAmount: bigint;
  maxAllowedLtvOverridePercent: bigint;
}

export interface LiquidateObligationAndRedeemReserveCollateralV2InstructionDataArgs {
  liquidityAmount: number | bigint;
  minAcceptableReceivedLiquidityAmount: number | bigint;
  maxAllowedLtvOverridePercent: number | bigint;
}

export function getLiquidateObligationAndRedeemReserveCollateralV2InstructionDataEncoder(): FixedSizeEncoder<LiquidateObligationAndRedeemReserveCollateralV2InstructionDataArgs> {
  return transformEncoder(
    getStructEncoder([
      ["discriminator", fixEncoderSize(getBytesEncoder(), 8)],
      ["liquidityAmount", getU64Encoder()],
      ["minAcceptableReceivedLiquidityAmount", getU64Encoder()],
      ["maxAllowedLtvOverridePercent", getU64Encoder()],
    ]),
    (value) => ({
      ...value,
      discriminator:
        LIQUIDATE_OBLIGATION_AND_REDEEM_RESERVE_COLLATERAL_V2_DISCRIMINATOR,
    }),
  );
}

export function getLiquidateObligationAndRedeemReserveCollateralV2InstructionDataDecoder(): FixedSizeDecoder<LiquidateObligationAndRedeemReserveCollateralV2InstructionData> {
  return getStructDecoder([
    ["discriminator", fixDecoderSize(getBytesDecoder(), 8)],
    ["liquidityAmount", getU64Decoder()],
    ["minAcceptableReceivedLiquidityAmount", getU64Decoder()],
    ["maxAllowedLtvOverridePercent", getU64Decoder()],
  ]);
}

export function getLiquidateObligationAndRedeemReserveCollateralV2InstructionDataCodec(): FixedSizeCodec<
  LiquidateObligationAndRedeemReserveCollateralV2InstructionDataArgs,
  LiquidateObligationAndRedeemReserveCollateralV2InstructionData
> {
  return combineCodec(
    getLiquidateObligationAndRedeemReserveCollateralV2InstructionDataEncoder(),
    getLiquidateObligationAndRedeemReserveCollateralV2InstructionDataDecoder(),
  );
}

export interface LiquidateObligationAndRedeemReserveCollateralV2Input<
  TAccountLiquidationAccountsLiquidator extends string = string,
  TAccountLiquidationAccountsObligation extends string = string,
  TAccountLiquidationAccountsLendingMarket extends string = string,
  TAccountLiquidationAccountsLendingMarketAuthority extends string = string,
  TAccountLiquidationAccountsRepayReserve extends string = string,
  TAccountLiquidationAccountsRepayReserveLiquidityMint extends string = string,
  TAccountLiquidationAccountsRepayReserveLiquiditySupply extends
    string = string,
  TAccountLiquidationAccountsWithdrawReserve extends string = string,
  TAccountLiquidationAccountsWithdrawReserveLiquidityMint extends
    string = string,
  TAccountLiquidationAccountsWithdrawReserveCollateralMint extends
    string = string,
  TAccountLiquidationAccountsWithdrawReserveCollateralSupply extends
    string = string,
  TAccountLiquidationAccountsWithdrawReserveLiquiditySupply extends
    string = string,
  TAccountLiquidationAccountsWithdrawReserveLiquidityFeeReceiver extends
    string = string,
  TAccountLiquidationAccountsUserSourceLiquidity extends string = string,
  TAccountLiquidationAccountsUserDestinationCollateral extends string = string,
  TAccountLiquidationAccountsUserDestinationLiquidity extends string = string,
  TAccountLiquidationAccountsCollateralTokenProgram extends string = string,
  TAccountLiquidationAccountsRepayLiquidityTokenProgram extends string = string,
  TAccountLiquidationAccountsWithdrawLiquidityTokenProgram extends
    string = string,
  TAccountLiquidationAccountsInstructionSysvarAccount extends string = string,
  TAccountCollateralFarmsAccountsV2ObligationFarmUserState extends
    string = string,
  TAccountCollateralFarmsAccountsV2ReserveFarmState extends string = string,
  TAccountDebtFarmsAccountsObligationFarmUserState extends string = string,
  TAccountDebtFarmsAccountsReserveFarmState extends string = string,
  TAccountFarmsProgram extends string = string,
> {
  liquidationAccountsLiquidator: TransactionSigner<TAccountLiquidationAccountsLiquidator>;
  liquidationAccountsObligation: Address<TAccountLiquidationAccountsObligation>;
  liquidationAccountsLendingMarket: Address<TAccountLiquidationAccountsLendingMarket>;
  liquidationAccountsLendingMarketAuthority: Address<TAccountLiquidationAccountsLendingMarketAuthority>;
  liquidationAccountsRepayReserve: Address<TAccountLiquidationAccountsRepayReserve>;
  liquidationAccountsRepayReserveLiquidityMint: Address<TAccountLiquidationAccountsRepayReserveLiquidityMint>;
  liquidationAccountsRepayReserveLiquiditySupply: Address<TAccountLiquidationAccountsRepayReserveLiquiditySupply>;
  liquidationAccountsWithdrawReserve: Address<TAccountLiquidationAccountsWithdrawReserve>;
  liquidationAccountsWithdrawReserveLiquidityMint: Address<TAccountLiquidationAccountsWithdrawReserveLiquidityMint>;
  liquidationAccountsWithdrawReserveCollateralMint: Address<TAccountLiquidationAccountsWithdrawReserveCollateralMint>;
  liquidationAccountsWithdrawReserveCollateralSupply: Address<TAccountLiquidationAccountsWithdrawReserveCollateralSupply>;
  liquidationAccountsWithdrawReserveLiquiditySupply: Address<TAccountLiquidationAccountsWithdrawReserveLiquiditySupply>;
  liquidationAccountsWithdrawReserveLiquidityFeeReceiver: Address<TAccountLiquidationAccountsWithdrawReserveLiquidityFeeReceiver>;
  liquidationAccountsUserSourceLiquidity: Address<TAccountLiquidationAccountsUserSourceLiquidity>;
  liquidationAccountsUserDestinationCollateral: Address<TAccountLiquidationAccountsUserDestinationCollateral>;
  liquidationAccountsUserDestinationLiquidity: Address<TAccountLiquidationAccountsUserDestinationLiquidity>;
  liquidationAccountsCollateralTokenProgram: Address<TAccountLiquidationAccountsCollateralTokenProgram>;
  liquidationAccountsRepayLiquidityTokenProgram: Address<TAccountLiquidationAccountsRepayLiquidityTokenProgram>;
  liquidationAccountsWithdrawLiquidityTokenProgram: Address<TAccountLiquidationAccountsWithdrawLiquidityTokenProgram>;
  liquidationAccountsInstructionSysvarAccount?: Address<TAccountLiquidationAccountsInstructionSysvarAccount>;
  collateralFarmsAccountsV2ObligationFarmUserState?: Address<TAccountCollateralFarmsAccountsV2ObligationFarmUserState>;
  collateralFarmsAccountsV2ReserveFarmState?: Address<TAccountCollateralFarmsAccountsV2ReserveFarmState>;
  debtFarmsAccountsObligationFarmUserState?: Address<TAccountDebtFarmsAccountsObligationFarmUserState>;
  debtFarmsAccountsReserveFarmState?: Address<TAccountDebtFarmsAccountsReserveFarmState>;
  farmsProgram: Address<TAccountFarmsProgram>;
  liquidityAmount: LiquidateObligationAndRedeemReserveCollateralV2InstructionDataArgs["liquidityAmount"];
  minAcceptableReceivedLiquidityAmount: LiquidateObligationAndRedeemReserveCollateralV2InstructionDataArgs["minAcceptableReceivedLiquidityAmount"];
  maxAllowedLtvOverridePercent: LiquidateObligationAndRedeemReserveCollateralV2InstructionDataArgs["maxAllowedLtvOverridePercent"];
}

export function getLiquidateObligationAndRedeemReserveCollateralV2Instruction<
  TAccountLiquidationAccountsLiquidator extends string,
  TAccountLiquidationAccountsObligation extends string,
  TAccountLiquidationAccountsLendingMarket extends string,
  TAccountLiquidationAccountsLendingMarketAuthority extends string,
  TAccountLiquidationAccountsRepayReserve extends string,
  TAccountLiquidationAccountsRepayReserveLiquidityMint extends string,
  TAccountLiquidationAccountsRepayReserveLiquiditySupply extends string,
  TAccountLiquidationAccountsWithdrawReserve extends string,
  TAccountLiquidationAccountsWithdrawReserveLiquidityMint extends string,
  TAccountLiquidationAccountsWithdrawReserveCollateralMint extends string,
  TAccountLiquidationAccountsWithdrawReserveCollateralSupply extends string,
  TAccountLiquidationAccountsWithdrawReserveLiquiditySupply extends string,
  TAccountLiquidationAccountsWithdrawReserveLiquidityFeeReceiver extends string,
  TAccountLiquidationAccountsUserSourceLiquidity extends string,
  TAccountLiquidationAccountsUserDestinationCollateral extends string,
  TAccountLiquidationAccountsUserDestinationLiquidity extends string,
  TAccountLiquidationAccountsCollateralTokenProgram extends string,
  TAccountLiquidationAccountsRepayLiquidityTokenProgram extends string,
  TAccountLiquidationAccountsWithdrawLiquidityTokenProgram extends string,
  TAccountLiquidationAccountsInstructionSysvarAccount extends string,
  TAccountCollateralFarmsAccountsV2ObligationFarmUserState extends string,
  TAccountCollateralFarmsAccountsV2ReserveFarmState extends string,
  TAccountDebtFarmsAccountsObligationFarmUserState extends string,
  TAccountDebtFarmsAccountsReserveFarmState extends string,
  TAccountFarmsProgram extends string,
  TProgramAddress extends Address = typeof KAMINO_LENDING_PROGRAM_ADDRESS,
>(
  input: LiquidateObligationAndRedeemReserveCollateralV2Input<
    TAccountLiquidationAccountsLiquidator,
    TAccountLiquidationAccountsObligation,
    TAccountLiquidationAccountsLendingMarket,
    TAccountLiquidationAccountsLendingMarketAuthority,
    TAccountLiquidationAccountsRepayReserve,
    TAccountLiquidationAccountsRepayReserveLiquidityMint,
    TAccountLiquidationAccountsRepayReserveLiquiditySupply,
    TAccountLiquidationAccountsWithdrawReserve,
    TAccountLiquidationAccountsWithdrawReserveLiquidityMint,
    TAccountLiquidationAccountsWithdrawReserveCollateralMint,
    TAccountLiquidationAccountsWithdrawReserveCollateralSupply,
    TAccountLiquidationAccountsWithdrawReserveLiquiditySupply,
    TAccountLiquidationAccountsWithdrawReserveLiquidityFeeReceiver,
    TAccountLiquidationAccountsUserSourceLiquidity,
    TAccountLiquidationAccountsUserDestinationCollateral,
    TAccountLiquidationAccountsUserDestinationLiquidity,
    TAccountLiquidationAccountsCollateralTokenProgram,
    TAccountLiquidationAccountsRepayLiquidityTokenProgram,
    TAccountLiquidationAccountsWithdrawLiquidityTokenProgram,
    TAccountLiquidationAccountsInstructionSysvarAccount,
    TAccountCollateralFarmsAccountsV2ObligationFarmUserState,
    TAccountCollateralFarmsAccountsV2ReserveFarmState,
    TAccountDebtFarmsAccountsObligationFarmUserState,
    TAccountDebtFarmsAccountsReserveFarmState,
    TAccountFarmsProgram
  >,
  config?: { programAddress?: TProgramAddress },
): LiquidateObligationAndRedeemReserveCollateralV2Instruction<
  TProgramAddress,
  TAccountLiquidationAccountsLiquidator,
  TAccountLiquidationAccountsObligation,
  TAccountLiquidationAccountsLendingMarket,
  TAccountLiquidationAccountsLendingMarketAuthority,
  TAccountLiquidationAccountsRepayReserve,
  TAccountLiquidationAccountsRepayReserveLiquidityMint,
  TAccountLiquidationAccountsRepayReserveLiquiditySupply,
  TAccountLiquidationAccountsWithdrawReserve,
  TAccountLiquidationAccountsWithdrawReserveLiquidityMint,
  TAccountLiquidationAccountsWithdrawReserveCollateralMint,
  TAccountLiquidationAccountsWithdrawReserveCollateralSupply,
  TAccountLiquidationAccountsWithdrawReserveLiquiditySupply,
  TAccountLiquidationAccountsWithdrawReserveLiquidityFeeReceiver,
  TAccountLiquidationAccountsUserSourceLiquidity,
  TAccountLiquidationAccountsUserDestinationCollateral,
  TAccountLiquidationAccountsUserDestinationLiquidity,
  TAccountLiquidationAccountsCollateralTokenProgram,
  TAccountLiquidationAccountsRepayLiquidityTokenProgram,
  TAccountLiquidationAccountsWithdrawLiquidityTokenProgram,
  TAccountLiquidationAccountsInstructionSysvarAccount,
  TAccountCollateralFarmsAccountsV2ObligationFarmUserState,
  TAccountCollateralFarmsAccountsV2ReserveFarmState,
  TAccountDebtFarmsAccountsObligationFarmUserState,
  TAccountDebtFarmsAccountsReserveFarmState,
  TAccountFarmsProgram
> {
  // Program address.
  const programAddress =
    config?.programAddress ?? KAMINO_LENDING_PROGRAM_ADDRESS;

  // Original accounts.
  const originalAccounts = {
    liquidationAccountsLiquidator: {
      value: input.liquidationAccountsLiquidator ?? null,
      isWritable: false,
    },
    liquidationAccountsObligation: {
      value: input.liquidationAccountsObligation ?? null,
      isWritable: true,
    },
    liquidationAccountsLendingMarket: {
      value: input.liquidationAccountsLendingMarket ?? null,
      isWritable: false,
    },
    liquidationAccountsLendingMarketAuthority: {
      value: input.liquidationAccountsLendingMarketAuthority ?? null,
      isWritable: false,
    },
    liquidationAccountsRepayReserve: {
      value: input.liquidationAccountsRepayReserve ?? null,
      isWritable: true,
    },
    liquidationAccountsRepayReserveLiquidityMint: {
      value: input.liquidationAccountsRepayReserveLiquidityMint ?? null,
      isWritable: false,
    },
    liquidationAccountsRepayReserveLiquiditySupply: {
      value: input.liquidationAccountsRepayReserveLiquiditySupply ?? null,
      isWritable: true,
    },
    liquidationAccountsWithdrawReserve: {
      value: input.liquidationAccountsWithdrawReserve ?? null,
      isWritable: true,
    },
    liquidationAccountsWithdrawReserveLiquidityMint: {
      value: input.liquidationAccountsWithdrawReserveLiquidityMint ?? null,
      isWritable: false,
    },
    liquidationAccountsWithdrawReserveCollateralMint: {
      value: input.liquidationAccountsWithdrawReserveCollateralMint ?? null,
      isWritable: true,
    },
    liquidationAccountsWithdrawReserveCollateralSupply: {
      value: input.liquidationAccountsWithdrawReserveCollateralSupply ?? null,
      isWritable: true,
    },
    liquidationAccountsWithdrawReserveLiquiditySupply: {
      value: input.liquidationAccountsWithdrawReserveLiquiditySupply ?? null,
      isWritable: true,
    },
    liquidationAccountsWithdrawReserveLiquidityFeeReceiver: {
      value:
        input.liquidationAccountsWithdrawReserveLiquidityFeeReceiver ?? null,
      isWritable: true,
    },
    liquidationAccountsUserSourceLiquidity: {
      value: input.liquidationAccountsUserSourceLiquidity ?? null,
      isWritable: true,
    },
    liquidationAccountsUserDestinationCollateral: {
      value: input.liquidationAccountsUserDestinationCollateral ?? null,
      isWritable: true,
    },
    liquidationAccountsUserDestinationLiquidity: {
      value: input.liquidationAccountsUserDestinationLiquidity ?? null,
      isWritable: true,
    },
    liquidationAccountsCollateralTokenProgram: {
      value: input.liquidationAccountsCollateralTokenProgram ?? null,
      isWritable: false,
    },
    liquidationAccountsRepayLiquidityTokenProgram: {
      value: input.liquidationAccountsRepayLiquidityTokenProgram ?? null,
      isWritable: false,
    },
    liquidationAccountsWithdrawLiquidityTokenProgram: {
      value: input.liquidationAccountsWithdrawLiquidityTokenProgram ?? null,
      isWritable: false,
    },
    liquidationAccountsInstructionSysvarAccount: {
      value: input.liquidationAccountsInstructionSysvarAccount ?? null,
      isWritable: false,
    },
    collateralFarmsAccountsV2ObligationFarmUserState: {
      value: input.collateralFarmsAccountsV2ObligationFarmUserState ?? null,
      isWritable: true,
    },
    collateralFarmsAccountsV2ReserveFarmState: {
      value: input.collateralFarmsAccountsV2ReserveFarmState ?? null,
      isWritable: true,
    },
    debtFarmsAccountsObligationFarmUserState: {
      value: input.debtFarmsAccountsObligationFarmUserState ?? null,
      isWritable: true,
    },
    debtFarmsAccountsReserveFarmState: {
      value: input.debtFarmsAccountsReserveFarmState ?? null,
      isWritable: true,
    },
    farmsProgram: { value: input.farmsProgram ?? null, isWritable: false },
  };
  const accounts = originalAccounts as Record<
    keyof typeof originalAccounts,
    ResolvedAccount
  >;

  // Original args.
  const args = { ...input };

  // Resolve default values.
  if (!accounts.liquidationAccountsInstructionSysvarAccount.value) {
    accounts.liquidationAccountsInstructionSysvarAccount.value =
      "Sysvar1nstructions1111111111111111111111111" as Address<"Sysvar1nstructions1111111111111111111111111">;
  }

  const getAccountMeta = getAccountMetaFactory(programAddress, "programId");
  return Object.freeze({
    accounts: [
      getAccountMeta(accounts.liquidationAccountsLiquidator),
      getAccountMeta(accounts.liquidationAccountsObligation),
      getAccountMeta(accounts.liquidationAccountsLendingMarket),
      getAccountMeta(accounts.liquidationAccountsLendingMarketAuthority),
      getAccountMeta(accounts.liquidationAccountsRepayReserve),
      getAccountMeta(accounts.liquidationAccountsRepayReserveLiquidityMint),
      getAccountMeta(accounts.liquidationAccountsRepayReserveLiquiditySupply),
      getAccountMeta(accounts.liquidationAccountsWithdrawReserve),
      getAccountMeta(accounts.liquidationAccountsWithdrawReserveLiquidityMint),
      getAccountMeta(accounts.liquidationAccountsWithdrawReserveCollateralMint),
      getAccountMeta(
        accounts.liquidationAccountsWithdrawReserveCollateralSupply,
      ),
      getAccountMeta(
        accounts.liquidationAccountsWithdrawReserveLiquiditySupply,
      ),
      getAccountMeta(
        accounts.liquidationAccountsWithdrawReserveLiquidityFeeReceiver,
      ),
      getAccountMeta(accounts.liquidationAccountsUserSourceLiquidity),
      getAccountMeta(accounts.liquidationAccountsUserDestinationCollateral),
      getAccountMeta(accounts.liquidationAccountsUserDestinationLiquidity),
      getAccountMeta(accounts.liquidationAccountsCollateralTokenProgram),
      getAccountMeta(accounts.liquidationAccountsRepayLiquidityTokenProgram),
      getAccountMeta(accounts.liquidationAccountsWithdrawLiquidityTokenProgram),
      getAccountMeta(accounts.liquidationAccountsInstructionSysvarAccount),
      getAccountMeta(accounts.collateralFarmsAccountsV2ObligationFarmUserState),
      getAccountMeta(accounts.collateralFarmsAccountsV2ReserveFarmState),
      getAccountMeta(accounts.debtFarmsAccountsObligationFarmUserState),
      getAccountMeta(accounts.debtFarmsAccountsReserveFarmState),
      getAccountMeta(accounts.farmsProgram),
    ],
    data: getLiquidateObligationAndRedeemReserveCollateralV2InstructionDataEncoder().encode(
      args as LiquidateObligationAndRedeemReserveCollateralV2InstructionDataArgs,
    ),
    programAddress,
  } as LiquidateObligationAndRedeemReserveCollateralV2Instruction<
    TProgramAddress,
    TAccountLiquidationAccountsLiquidator,
    TAccountLiquidationAccountsObligation,
    TAccountLiquidationAccountsLendingMarket,
    TAccountLiquidationAccountsLendingMarketAuthority,
    TAccountLiquidationAccountsRepayReserve,
    TAccountLiquidationAccountsRepayReserveLiquidityMint,
    TAccountLiquidationAccountsRepayReserveLiquiditySupply,
    TAccountLiquidationAccountsWithdrawReserve,
    TAccountLiquidationAccountsWithdrawReserveLiquidityMint,
    TAccountLiquidationAccountsWithdrawReserveCollateralMint,
    TAccountLiquidationAccountsWithdrawReserveCollateralSupply,
    TAccountLiquidationAccountsWithdrawReserveLiquiditySupply,
    TAccountLiquidationAccountsWithdrawReserveLiquidityFeeReceiver,
    TAccountLiquidationAccountsUserSourceLiquidity,
    TAccountLiquidationAccountsUserDestinationCollateral,
    TAccountLiquidationAccountsUserDestinationLiquidity,
    TAccountLiquidationAccountsCollateralTokenProgram,
    TAccountLiquidationAccountsRepayLiquidityTokenProgram,
    TAccountLiquidationAccountsWithdrawLiquidityTokenProgram,
    TAccountLiquidationAccountsInstructionSysvarAccount,
    TAccountCollateralFarmsAccountsV2ObligationFarmUserState,
    TAccountCollateralFarmsAccountsV2ReserveFarmState,
    TAccountDebtFarmsAccountsObligationFarmUserState,
    TAccountDebtFarmsAccountsReserveFarmState,
    TAccountFarmsProgram
  >);
}

export interface ParsedLiquidateObligationAndRedeemReserveCollateralV2Instruction<
  TProgram extends string = typeof KAMINO_LENDING_PROGRAM_ADDRESS,
  TAccountMetas extends readonly AccountMeta[] = readonly AccountMeta[],
> {
  programAddress: Address<TProgram>;
  accounts: {
    liquidationAccountsLiquidator: TAccountMetas[0];
    liquidationAccountsObligation: TAccountMetas[1];
    liquidationAccountsLendingMarket: TAccountMetas[2];
    liquidationAccountsLendingMarketAuthority: TAccountMetas[3];
    liquidationAccountsRepayReserve: TAccountMetas[4];
    liquidationAccountsRepayReserveLiquidityMint: TAccountMetas[5];
    liquidationAccountsRepayReserveLiquiditySupply: TAccountMetas[6];
    liquidationAccountsWithdrawReserve: TAccountMetas[7];
    liquidationAccountsWithdrawReserveLiquidityMint: TAccountMetas[8];
    liquidationAccountsWithdrawReserveCollateralMint: TAccountMetas[9];
    liquidationAccountsWithdrawReserveCollateralSupply: TAccountMetas[10];
    liquidationAccountsWithdrawReserveLiquiditySupply: TAccountMetas[11];
    liquidationAccountsWithdrawReserveLiquidityFeeReceiver: TAccountMetas[12];
    liquidationAccountsUserSourceLiquidity: TAccountMetas[13];
    liquidationAccountsUserDestinationCollateral: TAccountMetas[14];
    liquidationAccountsUserDestinationLiquidity: TAccountMetas[15];
    liquidationAccountsCollateralTokenProgram: TAccountMetas[16];
    liquidationAccountsRepayLiquidityTokenProgram: TAccountMetas[17];
    liquidationAccountsWithdrawLiquidityTokenProgram: TAccountMetas[18];
    liquidationAccountsInstructionSysvarAccount: TAccountMetas[19];
    collateralFarmsAccountsV2ObligationFarmUserState?:
      | TAccountMetas[20]
      | undefined;
    collateralFarmsAccountsV2ReserveFarmState?: TAccountMetas[21] | undefined;
    debtFarmsAccountsObligationFarmUserState?: TAccountMetas[22] | undefined;
    debtFarmsAccountsReserveFarmState?: TAccountMetas[23] | undefined;
    farmsProgram: TAccountMetas[24];
  };
  data: LiquidateObligationAndRedeemReserveCollateralV2InstructionData;
}

export function parseLiquidateObligationAndRedeemReserveCollateralV2Instruction<
  TProgram extends string,
  TAccountMetas extends readonly AccountMeta[],
>(
  instruction: Instruction<TProgram> &
    InstructionWithAccounts<TAccountMetas> &
    InstructionWithData<ReadonlyUint8Array>,
): ParsedLiquidateObligationAndRedeemReserveCollateralV2Instruction<
  TProgram,
  TAccountMetas
> {
  if (instruction.accounts.length < 25) {
    // TODO: Coded error.
    throw new Error("Not enough accounts");
  }
  let accountIndex = 0;
  const getNextAccount = () => {
    const accountMeta = (instruction.accounts as TAccountMetas)[accountIndex]!;
    accountIndex += 1;
    return accountMeta;
  };
  const getNextOptionalAccount = () => {
    const accountMeta = getNextAccount();
    return accountMeta.address === KAMINO_LENDING_PROGRAM_ADDRESS
      ? undefined
      : accountMeta;
  };
  return {
    programAddress: instruction.programAddress,
    accounts: {
      liquidationAccountsLiquidator: getNextAccount(),
      liquidationAccountsObligation: getNextAccount(),
      liquidationAccountsLendingMarket: getNextAccount(),
      liquidationAccountsLendingMarketAuthority: getNextAccount(),
      liquidationAccountsRepayReserve: getNextAccount(),
      liquidationAccountsRepayReserveLiquidityMint: getNextAccount(),
      liquidationAccountsRepayReserveLiquiditySupply: getNextAccount(),
      liquidationAccountsWithdrawReserve: getNextAccount(),
      liquidationAccountsWithdrawReserveLiquidityMint: getNextAccount(),
      liquidationAccountsWithdrawReserveCollateralMint: getNextAccount(),
      liquidationAccountsWithdrawReserveCollateralSupply: getNextAccount(),
      liquidationAccountsWithdrawReserveLiquiditySupply: getNextAccount(),
      liquidationAccountsWithdrawReserveLiquidityFeeReceiver: getNextAccount(),
      liquidationAccountsUserSourceLiquidity: getNextAccount(),
      liquidationAccountsUserDestinationCollateral: getNextAccount(),
      liquidationAccountsUserDestinationLiquidity: getNextAccount(),
      liquidationAccountsCollateralTokenProgram: getNextAccount(),
      liquidationAccountsRepayLiquidityTokenProgram: getNextAccount(),
      liquidationAccountsWithdrawLiquidityTokenProgram: getNextAccount(),
      liquidationAccountsInstructionSysvarAccount: getNextAccount(),
      collateralFarmsAccountsV2ObligationFarmUserState:
        getNextOptionalAccount(),
      collateralFarmsAccountsV2ReserveFarmState: getNextOptionalAccount(),
      debtFarmsAccountsObligationFarmUserState: getNextOptionalAccount(),
      debtFarmsAccountsReserveFarmState: getNextOptionalAccount(),
      farmsProgram: getNextAccount(),
    },
    data: getLiquidateObligationAndRedeemReserveCollateralV2InstructionDataDecoder().decode(
      instruction.data,
    ),
  };
}
