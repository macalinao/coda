/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  SolanaError,
} from "@solana/kit";
import { isProgramError } from "@solana/kit";
import { VOTER_STAKE_REGISTRY_PROGRAM_ADDRESS } from "../programs/index.js";

/** InvalidRate: Exchange rate must be greater than zero */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_RATE = 0x1770; // 6000
/** RatesFull:  */
export const VOTER_STAKE_REGISTRY_ERROR__RATES_FULL = 0x1771; // 6001
/** VotingMintNotFound:  */
export const VOTER_STAKE_REGISTRY_ERROR__VOTING_MINT_NOT_FOUND = 0x1772; // 6002
/** DepositEntryNotFound:  */
export const VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_ENTRY_NOT_FOUND = 0x1773; // 6003
/** DepositEntryFull:  */
export const VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_ENTRY_FULL = 0x1774; // 6004
/** VotingTokenNonZero:  */
export const VOTER_STAKE_REGISTRY_ERROR__VOTING_TOKEN_NON_ZERO = 0x1775; // 6005
/** OutOfBoundsDepositEntryIndex:  */
export const VOTER_STAKE_REGISTRY_ERROR__OUT_OF_BOUNDS_DEPOSIT_ENTRY_INDEX = 0x1776; // 6006
/** UnusedDepositEntryIndex:  */
export const VOTER_STAKE_REGISTRY_ERROR__UNUSED_DEPOSIT_ENTRY_INDEX = 0x1777; // 6007
/** InsufficientUnlockedTokens:  */
export const VOTER_STAKE_REGISTRY_ERROR__INSUFFICIENT_UNLOCKED_TOKENS = 0x1778; // 6008
/** UnableToConvert:  */
export const VOTER_STAKE_REGISTRY_ERROR__UNABLE_TO_CONVERT = 0x1779; // 6009
/** InvalidLockupPeriod:  */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_LOCKUP_PERIOD = 0x177a; // 6010
/** InvalidEndTs:  */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_END_TS = 0x177b; // 6011
/** InvalidDays:  */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_DAYS = 0x177c; // 6012
/** VotingMintConfigIndexAlreadyInUse:  */
export const VOTER_STAKE_REGISTRY_ERROR__VOTING_MINT_CONFIG_INDEX_ALREADY_IN_USE = 0x177d; // 6013
/** OutOfBoundsVotingMintConfigIndex:  */
export const VOTER_STAKE_REGISTRY_ERROR__OUT_OF_BOUNDS_VOTING_MINT_CONFIG_INDEX = 0x177e; // 6014
/** InvalidDecimals: Exchange rate decimals cannot be larger than registrar decimals */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_DECIMALS = 0x177f; // 6015
/** InvalidToDepositAndWithdrawInOneSlot:  */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_TO_DEPOSIT_AND_WITHDRAW_IN_ONE_SLOT = 0x1780; // 6016
/** ShouldBeTheFirstIxInATx:  */
export const VOTER_STAKE_REGISTRY_ERROR__SHOULD_BE_THE_FIRST_IX_IN_A_TX = 0x1781; // 6017
/** ForbiddenCpi:  */
export const VOTER_STAKE_REGISTRY_ERROR__FORBIDDEN_CPI = 0x1782; // 6018
/** InvalidMint:  */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_MINT = 0x1783; // 6019
/** DebugInstruction:  */
export const VOTER_STAKE_REGISTRY_ERROR__DEBUG_INSTRUCTION = 0x1784; // 6020
/** ClawbackNotAllowedOnDeposit:  */
export const VOTER_STAKE_REGISTRY_ERROR__CLAWBACK_NOT_ALLOWED_ON_DEPOSIT = 0x1785; // 6021
/** DepositStillLocked:  */
export const VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_STILL_LOCKED = 0x1786; // 6022
/** InvalidAuthority:  */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_AUTHORITY = 0x1787; // 6023
/** InvalidTokenOwnerRecord:  */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_TOKEN_OWNER_RECORD = 0x1788; // 6024
/** InvalidRealmAuthority:  */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_REALM_AUTHORITY = 0x1789; // 6025
/** VoterWeightOverflow:  */
export const VOTER_STAKE_REGISTRY_ERROR__VOTER_WEIGHT_OVERFLOW = 0x178a; // 6026
/** LockupSaturationMustBePositive:  */
export const VOTER_STAKE_REGISTRY_ERROR__LOCKUP_SATURATION_MUST_BE_POSITIVE = 0x178b; // 6027
/** VotingMintConfiguredWithDifferentIndex:  */
export const VOTER_STAKE_REGISTRY_ERROR__VOTING_MINT_CONFIGURED_WITH_DIFFERENT_INDEX = 0x178c; // 6028
/** InternalProgramError:  */
export const VOTER_STAKE_REGISTRY_ERROR__INTERNAL_PROGRAM_ERROR = 0x178d; // 6029
/** InsufficientLockedTokens:  */
export const VOTER_STAKE_REGISTRY_ERROR__INSUFFICIENT_LOCKED_TOKENS = 0x178e; // 6030
/** MustKeepTokensLocked:  */
export const VOTER_STAKE_REGISTRY_ERROR__MUST_KEEP_TOKENS_LOCKED = 0x178f; // 6031
/** InvalidLockupKind:  */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_LOCKUP_KIND = 0x1790; // 6032
/** InvalidChangeToClawbackDepositEntry:  */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_CHANGE_TO_CLAWBACK_DEPOSIT_ENTRY = 0x1791; // 6033
/** InternalErrorBadLockupVoteWeight:  */
export const VOTER_STAKE_REGISTRY_ERROR__INTERNAL_ERROR_BAD_LOCKUP_VOTE_WEIGHT = 0x1792; // 6034
/** DepositStartTooFarInFuture:  */
export const VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_START_TOO_FAR_IN_FUTURE = 0x1793; // 6035
/** VaultTokenNonZero:  */
export const VOTER_STAKE_REGISTRY_ERROR__VAULT_TOKEN_NON_ZERO = 0x1794; // 6036
/** InvalidTimestampArguments:  */
export const VOTER_STAKE_REGISTRY_ERROR__INVALID_TIMESTAMP_ARGUMENTS = 0x1795; // 6037

export type VoterStakeRegistryError =
  | typeof VOTER_STAKE_REGISTRY_ERROR__CLAWBACK_NOT_ALLOWED_ON_DEPOSIT
  | typeof VOTER_STAKE_REGISTRY_ERROR__DEBUG_INSTRUCTION
  | typeof VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_ENTRY_FULL
  | typeof VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_ENTRY_NOT_FOUND
  | typeof VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_START_TOO_FAR_IN_FUTURE
  | typeof VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_STILL_LOCKED
  | typeof VOTER_STAKE_REGISTRY_ERROR__FORBIDDEN_CPI
  | typeof VOTER_STAKE_REGISTRY_ERROR__INSUFFICIENT_LOCKED_TOKENS
  | typeof VOTER_STAKE_REGISTRY_ERROR__INSUFFICIENT_UNLOCKED_TOKENS
  | typeof VOTER_STAKE_REGISTRY_ERROR__INTERNAL_ERROR_BAD_LOCKUP_VOTE_WEIGHT
  | typeof VOTER_STAKE_REGISTRY_ERROR__INTERNAL_PROGRAM_ERROR
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_AUTHORITY
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_CHANGE_TO_CLAWBACK_DEPOSIT_ENTRY
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_DAYS
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_DECIMALS
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_END_TS
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_LOCKUP_KIND
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_LOCKUP_PERIOD
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_MINT
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_RATE
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_REALM_AUTHORITY
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_TIMESTAMP_ARGUMENTS
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_TO_DEPOSIT_AND_WITHDRAW_IN_ONE_SLOT
  | typeof VOTER_STAKE_REGISTRY_ERROR__INVALID_TOKEN_OWNER_RECORD
  | typeof VOTER_STAKE_REGISTRY_ERROR__LOCKUP_SATURATION_MUST_BE_POSITIVE
  | typeof VOTER_STAKE_REGISTRY_ERROR__MUST_KEEP_TOKENS_LOCKED
  | typeof VOTER_STAKE_REGISTRY_ERROR__OUT_OF_BOUNDS_DEPOSIT_ENTRY_INDEX
  | typeof VOTER_STAKE_REGISTRY_ERROR__OUT_OF_BOUNDS_VOTING_MINT_CONFIG_INDEX
  | typeof VOTER_STAKE_REGISTRY_ERROR__RATES_FULL
  | typeof VOTER_STAKE_REGISTRY_ERROR__SHOULD_BE_THE_FIRST_IX_IN_A_TX
  | typeof VOTER_STAKE_REGISTRY_ERROR__UNABLE_TO_CONVERT
  | typeof VOTER_STAKE_REGISTRY_ERROR__UNUSED_DEPOSIT_ENTRY_INDEX
  | typeof VOTER_STAKE_REGISTRY_ERROR__VAULT_TOKEN_NON_ZERO
  | typeof VOTER_STAKE_REGISTRY_ERROR__VOTER_WEIGHT_OVERFLOW
  | typeof VOTER_STAKE_REGISTRY_ERROR__VOTING_MINT_CONFIG_INDEX_ALREADY_IN_USE
  | typeof VOTER_STAKE_REGISTRY_ERROR__VOTING_MINT_CONFIGURED_WITH_DIFFERENT_INDEX
  | typeof VOTER_STAKE_REGISTRY_ERROR__VOTING_MINT_NOT_FOUND
  | typeof VOTER_STAKE_REGISTRY_ERROR__VOTING_TOKEN_NON_ZERO;

let voterStakeRegistryErrorMessages:
  | Record<VoterStakeRegistryError, string>
  | undefined;
if (true) {
  voterStakeRegistryErrorMessages = {
    [VOTER_STAKE_REGISTRY_ERROR__CLAWBACK_NOT_ALLOWED_ON_DEPOSIT]: "",
    [VOTER_STAKE_REGISTRY_ERROR__DEBUG_INSTRUCTION]: "",
    [VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_ENTRY_FULL]: "",
    [VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_ENTRY_NOT_FOUND]: "",
    [VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_START_TOO_FAR_IN_FUTURE]: "",
    [VOTER_STAKE_REGISTRY_ERROR__DEPOSIT_STILL_LOCKED]: "",
    [VOTER_STAKE_REGISTRY_ERROR__FORBIDDEN_CPI]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INSUFFICIENT_LOCKED_TOKENS]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INSUFFICIENT_UNLOCKED_TOKENS]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INTERNAL_ERROR_BAD_LOCKUP_VOTE_WEIGHT]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INTERNAL_PROGRAM_ERROR]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_AUTHORITY]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_CHANGE_TO_CLAWBACK_DEPOSIT_ENTRY]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_DAYS]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_DECIMALS]:
      "Exchange rate decimals cannot be larger than registrar decimals",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_END_TS]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_LOCKUP_KIND]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_LOCKUP_PERIOD]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_MINT]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_RATE]:
      "Exchange rate must be greater than zero",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_REALM_AUTHORITY]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_TIMESTAMP_ARGUMENTS]: "",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_TO_DEPOSIT_AND_WITHDRAW_IN_ONE_SLOT]:
      "",
    [VOTER_STAKE_REGISTRY_ERROR__INVALID_TOKEN_OWNER_RECORD]: "",
    [VOTER_STAKE_REGISTRY_ERROR__LOCKUP_SATURATION_MUST_BE_POSITIVE]: "",
    [VOTER_STAKE_REGISTRY_ERROR__MUST_KEEP_TOKENS_LOCKED]: "",
    [VOTER_STAKE_REGISTRY_ERROR__OUT_OF_BOUNDS_DEPOSIT_ENTRY_INDEX]: "",
    [VOTER_STAKE_REGISTRY_ERROR__OUT_OF_BOUNDS_VOTING_MINT_CONFIG_INDEX]: "",
    [VOTER_STAKE_REGISTRY_ERROR__RATES_FULL]: "",
    [VOTER_STAKE_REGISTRY_ERROR__SHOULD_BE_THE_FIRST_IX_IN_A_TX]: "",
    [VOTER_STAKE_REGISTRY_ERROR__UNABLE_TO_CONVERT]: "",
    [VOTER_STAKE_REGISTRY_ERROR__UNUSED_DEPOSIT_ENTRY_INDEX]: "",
    [VOTER_STAKE_REGISTRY_ERROR__VAULT_TOKEN_NON_ZERO]: "",
    [VOTER_STAKE_REGISTRY_ERROR__VOTER_WEIGHT_OVERFLOW]: "",
    [VOTER_STAKE_REGISTRY_ERROR__VOTING_MINT_CONFIG_INDEX_ALREADY_IN_USE]: "",
    [VOTER_STAKE_REGISTRY_ERROR__VOTING_MINT_CONFIGURED_WITH_DIFFERENT_INDEX]:
      "",
    [VOTER_STAKE_REGISTRY_ERROR__VOTING_MINT_NOT_FOUND]: "",
    [VOTER_STAKE_REGISTRY_ERROR__VOTING_TOKEN_NON_ZERO]: "",
  };
}

export function getVoterStakeRegistryErrorMessage(
  code: VoterStakeRegistryError,
): string {
  if (true) {
    return voterStakeRegistryErrorMessages![code];
  }

  return "Error message not available in production bundles.";
}

export function isVoterStakeRegistryError<
  TProgramErrorCode extends VoterStakeRegistryError,
>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode,
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    VOTER_STAKE_REGISTRY_PROGRAM_ADDRESS,
    code,
  );
}
