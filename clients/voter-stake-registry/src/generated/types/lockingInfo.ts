/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Codec,
  Decoder,
  Encoder,
  Option,
  OptionOrNullable,
} from "@solana/kit";
import type { VestingInfo, VestingInfoArgs } from "./index.js";
import {
  combineCodec,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";
import { getVestingInfoDecoder, getVestingInfoEncoder } from "./index.js";

export interface LockingInfo {
  amount: bigint;
  endTimestamp: Option<bigint>;
  vesting: Option<VestingInfo>;
}

export interface LockingInfoArgs {
  amount: number | bigint;
  endTimestamp: OptionOrNullable<number | bigint>;
  vesting: OptionOrNullable<VestingInfoArgs>;
}

export function getLockingInfoEncoder(): Encoder<LockingInfoArgs> {
  return getStructEncoder([
    ["amount", getU64Encoder()],
    ["endTimestamp", getOptionEncoder(getU64Encoder())],
    ["vesting", getOptionEncoder(getVestingInfoEncoder())],
  ]);
}

export function getLockingInfoDecoder(): Decoder<LockingInfo> {
  return getStructDecoder([
    ["amount", getU64Decoder()],
    ["endTimestamp", getOptionDecoder(getU64Decoder())],
    ["vesting", getOptionDecoder(getVestingInfoDecoder())],
  ]);
}

export function getLockingInfoCodec(): Codec<LockingInfoArgs, LockingInfo> {
  return combineCodec(getLockingInfoEncoder(), getLockingInfoDecoder());
}
