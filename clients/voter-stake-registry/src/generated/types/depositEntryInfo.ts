/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Codec,
  Decoder,
  Encoder,
  Option,
  OptionOrNullable,
} from "@solana/kit";
import type { LockingInfo, LockingInfoArgs } from "./index.js";
import {
  combineCodec,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";
import { getLockingInfoDecoder, getLockingInfoEncoder } from "./index.js";

export interface DepositEntryInfo {
  depositEntryIndex: number;
  votingMintConfigIndex: number;
  unlocked: bigint;
  votingPower: bigint;
  votingPowerBaseline: bigint;
  locking: Option<LockingInfo>;
}

export interface DepositEntryInfoArgs {
  depositEntryIndex: number;
  votingMintConfigIndex: number;
  unlocked: number | bigint;
  votingPower: number | bigint;
  votingPowerBaseline: number | bigint;
  locking: OptionOrNullable<LockingInfoArgs>;
}

export function getDepositEntryInfoEncoder(): Encoder<DepositEntryInfoArgs> {
  return getStructEncoder([
    ["depositEntryIndex", getU8Encoder()],
    ["votingMintConfigIndex", getU8Encoder()],
    ["unlocked", getU64Encoder()],
    ["votingPower", getU64Encoder()],
    ["votingPowerBaseline", getU64Encoder()],
    ["locking", getOptionEncoder(getLockingInfoEncoder())],
  ]);
}

export function getDepositEntryInfoDecoder(): Decoder<DepositEntryInfo> {
  return getStructDecoder([
    ["depositEntryIndex", getU8Decoder()],
    ["votingMintConfigIndex", getU8Decoder()],
    ["unlocked", getU64Decoder()],
    ["votingPower", getU64Decoder()],
    ["votingPowerBaseline", getU64Decoder()],
    ["locking", getOptionDecoder(getLockingInfoDecoder())],
  ]);
}

export function getDepositEntryInfoCodec(): Codec<
  DepositEntryInfoArgs,
  DepositEntryInfo
> {
  return combineCodec(
    getDepositEntryInfoEncoder(),
    getDepositEntryInfoDecoder(),
  );
}
