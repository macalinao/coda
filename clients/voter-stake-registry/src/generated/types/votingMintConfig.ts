/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getI8Decoder,
  getI8Encoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";

export interface VotingMintConfig {
  mint: Address;
  grantAuthority: Address;
  baselineVoteWeightScaledFactor: bigint;
  maxExtraLockupVoteWeightScaledFactor: bigint;
  lockupSaturationSecs: bigint;
  digitShift: number;
  reserved1: number[];
  reserved2: bigint[];
}

export interface VotingMintConfigArgs {
  mint: Address;
  grantAuthority: Address;
  baselineVoteWeightScaledFactor: number | bigint;
  maxExtraLockupVoteWeightScaledFactor: number | bigint;
  lockupSaturationSecs: number | bigint;
  digitShift: number;
  reserved1: number[];
  reserved2: (number | bigint)[];
}

export function getVotingMintConfigEncoder(): FixedSizeEncoder<VotingMintConfigArgs> {
  return getStructEncoder([
    ["mint", getAddressEncoder()],
    ["grantAuthority", getAddressEncoder()],
    ["baselineVoteWeightScaledFactor", getU64Encoder()],
    ["maxExtraLockupVoteWeightScaledFactor", getU64Encoder()],
    ["lockupSaturationSecs", getU64Encoder()],
    ["digitShift", getI8Encoder()],
    ["reserved1", getArrayEncoder(getU8Encoder(), { size: 7 })],
    ["reserved2", getArrayEncoder(getU64Encoder(), { size: 7 })],
  ]);
}

export function getVotingMintConfigDecoder(): FixedSizeDecoder<VotingMintConfig> {
  return getStructDecoder([
    ["mint", getAddressDecoder()],
    ["grantAuthority", getAddressDecoder()],
    ["baselineVoteWeightScaledFactor", getU64Decoder()],
    ["maxExtraLockupVoteWeightScaledFactor", getU64Decoder()],
    ["lockupSaturationSecs", getU64Decoder()],
    ["digitShift", getI8Decoder()],
    ["reserved1", getArrayDecoder(getU8Decoder(), { size: 7 })],
    ["reserved2", getArrayDecoder(getU64Decoder(), { size: 7 })],
  ]);
}

export function getVotingMintConfigCodec(): FixedSizeCodec<
  VotingMintConfigArgs,
  VotingMintConfig
> {
  return combineCodec(
    getVotingMintConfigEncoder(),
    getVotingMintConfigDecoder(),
  );
}
