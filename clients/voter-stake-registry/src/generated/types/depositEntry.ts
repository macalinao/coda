/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import type { Lockup, LockupArgs } from "./index.js";
import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";
import { getLockupDecoder, getLockupEncoder } from "./index.js";

export interface DepositEntry {
  lockup: Lockup;
  amountDepositedNative: bigint;
  amountInitiallyLockedNative: bigint;
  isUsed: boolean;
  allowClawback: boolean;
  votingMintConfigIdx: number;
  padding: number[];
}

export interface DepositEntryArgs {
  lockup: LockupArgs;
  amountDepositedNative: number | bigint;
  amountInitiallyLockedNative: number | bigint;
  isUsed: boolean;
  allowClawback: boolean;
  votingMintConfigIdx: number;
  padding: number[];
}

export function getDepositEntryEncoder(): FixedSizeEncoder<DepositEntryArgs> {
  return getStructEncoder([
    ["lockup", getLockupEncoder()],
    ["amountDepositedNative", getU64Encoder()],
    ["amountInitiallyLockedNative", getU64Encoder()],
    ["isUsed", getBooleanEncoder()],
    ["allowClawback", getBooleanEncoder()],
    ["votingMintConfigIdx", getU8Encoder()],
    ["padding", getArrayEncoder(getU8Encoder(), { size: 13 })],
  ]);
}

export function getDepositEntryDecoder(): FixedSizeDecoder<DepositEntry> {
  return getStructDecoder([
    ["lockup", getLockupDecoder()],
    ["amountDepositedNative", getU64Decoder()],
    ["amountInitiallyLockedNative", getU64Decoder()],
    ["isUsed", getBooleanDecoder()],
    ["allowClawback", getBooleanDecoder()],
    ["votingMintConfigIdx", getU8Decoder()],
    ["padding", getArrayDecoder(getU8Decoder(), { size: 13 })],
  ]);
}

export function getDepositEntryCodec(): FixedSizeCodec<
  DepositEntryArgs,
  DepositEntry
> {
  return combineCodec(getDepositEntryEncoder(), getDepositEntryDecoder());
}
