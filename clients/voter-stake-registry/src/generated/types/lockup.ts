/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import type { LockupKind, LockupKindArgs } from "./index.js";
import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
} from "@solana/kit";
import { getLockupKindDecoder, getLockupKindEncoder } from "./index.js";

export interface Lockup {
  startTs: bigint;
  endTs: bigint;
  kind: LockupKind;
  reserved: number[];
}

export interface LockupArgs {
  startTs: number | bigint;
  endTs: number | bigint;
  kind: LockupKindArgs;
  reserved: number[];
}

export function getLockupEncoder(): FixedSizeEncoder<LockupArgs> {
  return getStructEncoder([
    ["startTs", getI64Encoder()],
    ["endTs", getI64Encoder()],
    ["kind", getLockupKindEncoder()],
    ["reserved", getArrayEncoder(getU8Encoder(), { size: 15 })],
  ]);
}

export function getLockupDecoder(): FixedSizeDecoder<Lockup> {
  return getStructDecoder([
    ["startTs", getI64Decoder()],
    ["endTs", getI64Decoder()],
    ["kind", getLockupKindDecoder()],
    ["reserved", getArrayDecoder(getU8Decoder(), { size: 15 })],
  ]);
}

export function getLockupCodec(): FixedSizeCodec<LockupArgs, Lockup> {
  return combineCodec(getLockupEncoder(), getLockupDecoder());
}
