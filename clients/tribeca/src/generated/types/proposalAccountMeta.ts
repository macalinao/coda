/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
} from "@solana/kit";

export interface ProposalAccountMeta {
  pubkey: Address;
  isSigner: boolean;
  isWritable: boolean;
}

export type ProposalAccountMetaArgs = ProposalAccountMeta;

export function getProposalAccountMetaEncoder(): FixedSizeEncoder<ProposalAccountMetaArgs> {
  return getStructEncoder([
    ["pubkey", getAddressEncoder()],
    ["isSigner", getBooleanEncoder()],
    ["isWritable", getBooleanEncoder()],
  ]);
}

export function getProposalAccountMetaDecoder(): FixedSizeDecoder<ProposalAccountMeta> {
  return getStructDecoder([
    ["pubkey", getAddressDecoder()],
    ["isSigner", getBooleanDecoder()],
    ["isWritable", getBooleanDecoder()],
  ]);
}

export function getProposalAccountMetaCodec(): FixedSizeCodec<
  ProposalAccountMetaArgs,
  ProposalAccountMeta
> {
  return combineCodec(
    getProposalAccountMetaEncoder(),
    getProposalAccountMetaDecoder(),
  );
}
