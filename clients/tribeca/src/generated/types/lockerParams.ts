/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";

export interface LockerParams {
  whitelistEnabled: boolean;
  maxStakeVoteMultiplier: number;
  minStakeDuration: bigint;
  maxStakeDuration: bigint;
  proposalActivationMinVotes: bigint;
}

export interface LockerParamsArgs {
  whitelistEnabled: boolean;
  maxStakeVoteMultiplier: number;
  minStakeDuration: number | bigint;
  maxStakeDuration: number | bigint;
  proposalActivationMinVotes: number | bigint;
}

export function getLockerParamsEncoder(): FixedSizeEncoder<LockerParamsArgs> {
  return getStructEncoder([
    ["whitelistEnabled", getBooleanEncoder()],
    ["maxStakeVoteMultiplier", getU8Encoder()],
    ["minStakeDuration", getU64Encoder()],
    ["maxStakeDuration", getU64Encoder()],
    ["proposalActivationMinVotes", getU64Encoder()],
  ]);
}

export function getLockerParamsDecoder(): FixedSizeDecoder<LockerParams> {
  return getStructDecoder([
    ["whitelistEnabled", getBooleanDecoder()],
    ["maxStakeVoteMultiplier", getU8Decoder()],
    ["minStakeDuration", getU64Decoder()],
    ["maxStakeDuration", getU64Decoder()],
    ["proposalActivationMinVotes", getU64Decoder()],
  ]);
}

export function getLockerParamsCodec(): FixedSizeCodec<
  LockerParamsArgs,
  LockerParams
> {
  return combineCodec(getLockerParamsEncoder(), getLockerParamsDecoder());
}
