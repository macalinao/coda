/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type { Codec, Decoder, Encoder } from "@solana/kit";
import type { PayloadType, PayloadTypeArgs } from "./index.js";
import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getMapDecoder,
  getMapEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
} from "@solana/kit";
import { getPayloadTypeDecoder, getPayloadTypeEncoder } from "./index.js";

export interface Payload {
  map: Map<string, PayloadType>;
}

export interface PayloadArgs {
  map: Map<string, PayloadTypeArgs>;
}

export function getPayloadEncoder(): Encoder<PayloadArgs> {
  return getStructEncoder([
    [
      "map",
      getMapEncoder(
        addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder()),
        getPayloadTypeEncoder(),
      ),
    ],
  ]);
}

export function getPayloadDecoder(): Decoder<Payload> {
  return getStructDecoder([
    [
      "map",
      getMapDecoder(
        addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder()),
        getPayloadTypeDecoder(),
      ),
    ],
  ]);
}

export function getPayloadCodec(): Codec<PayloadArgs, Payload> {
  return combineCodec(getPayloadEncoder(), getPayloadDecoder());
}
