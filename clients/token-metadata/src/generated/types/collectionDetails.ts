/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
  GetDiscriminatedUnionVariant,
  GetDiscriminatedUnionVariantContent,
} from "@solana/kit";
import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";

export type CollectionDetails =
  | { __kind: "V1"; size: bigint }
  | { __kind: "V2"; padding: number[] };

export type CollectionDetailsArgs =
  | { __kind: "V1"; size: number | bigint }
  | { __kind: "V2"; padding: number[] };

export function getCollectionDetailsEncoder(): FixedSizeEncoder<CollectionDetailsArgs> {
  return getDiscriminatedUnionEncoder([
    ["V1", getStructEncoder([["size", getU64Encoder()]])],
    [
      "V2",
      getStructEncoder([
        ["padding", getArrayEncoder(getU8Encoder(), { size: 8 })],
      ]),
    ],
  ]) as FixedSizeEncoder<CollectionDetailsArgs>;
}

export function getCollectionDetailsDecoder(): FixedSizeDecoder<CollectionDetails> {
  return getDiscriminatedUnionDecoder([
    ["V1", getStructDecoder([["size", getU64Decoder()]])],
    [
      "V2",
      getStructDecoder([
        ["padding", getArrayDecoder(getU8Decoder(), { size: 8 })],
      ]),
    ],
  ]) as FixedSizeDecoder<CollectionDetails>;
}

export function getCollectionDetailsCodec(): FixedSizeCodec<
  CollectionDetailsArgs,
  CollectionDetails
> {
  return combineCodec(
    getCollectionDetailsEncoder(),
    getCollectionDetailsDecoder(),
  );
}

// Data Enum Helpers.
export function collectionDetails(
  kind: "V1",
  data: GetDiscriminatedUnionVariantContent<
    CollectionDetailsArgs,
    "__kind",
    "V1"
  >,
): GetDiscriminatedUnionVariant<CollectionDetailsArgs, "__kind", "V1">;
export function collectionDetails(
  kind: "V2",
  data: GetDiscriminatedUnionVariantContent<
    CollectionDetailsArgs,
    "__kind",
    "V2"
  >,
): GetDiscriminatedUnionVariant<CollectionDetailsArgs, "__kind", "V2">;
export function collectionDetails<
  K extends CollectionDetailsArgs["__kind"],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isCollectionDetails<K extends CollectionDetails["__kind"]>(
  kind: K,
  value: CollectionDetails,
): value is CollectionDetails & { __kind: K } {
  return value.__kind === kind;
}
