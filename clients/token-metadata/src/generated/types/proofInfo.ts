/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type { Codec, Decoder, Encoder } from "@solana/kit";
import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
} from "@solana/kit";

export interface ProofInfo {
  proof: number[][];
}

export type ProofInfoArgs = ProofInfo;

export function getProofInfoEncoder(): Encoder<ProofInfoArgs> {
  return getStructEncoder([
    ["proof", getArrayEncoder(getArrayEncoder(getU8Encoder(), { size: 32 }))],
  ]);
}

export function getProofInfoDecoder(): Decoder<ProofInfo> {
  return getStructDecoder([
    ["proof", getArrayDecoder(getArrayDecoder(getU8Decoder(), { size: 32 }))],
  ]);
}

export function getProofInfoCodec(): Codec<ProofInfoArgs, ProofInfo> {
  return combineCodec(getProofInfoEncoder(), getProofInfoDecoder());
}
