/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
} from "@solana/kit";

export interface MintWrapperAdminProposeEvent {
  mintWrapper: Address;
  currentAdmin: Address;
  pendingAdmin: Address;
}

export type MintWrapperAdminProposeEventArgs = MintWrapperAdminProposeEvent;

export function getMintWrapperAdminProposeEventEncoder(): FixedSizeEncoder<MintWrapperAdminProposeEventArgs> {
  return getStructEncoder([
    ["mintWrapper", getAddressEncoder()],
    ["currentAdmin", getAddressEncoder()],
    ["pendingAdmin", getAddressEncoder()],
  ]);
}

export function getMintWrapperAdminProposeEventDecoder(): FixedSizeDecoder<MintWrapperAdminProposeEvent> {
  return getStructDecoder([
    ["mintWrapper", getAddressDecoder()],
    ["currentAdmin", getAddressDecoder()],
    ["pendingAdmin", getAddressDecoder()],
  ]);
}

export function getMintWrapperAdminProposeEventCodec(): FixedSizeCodec<
  MintWrapperAdminProposeEventArgs,
  MintWrapperAdminProposeEvent
> {
  return combineCodec(
    getMintWrapperAdminProposeEventEncoder(),
    getMintWrapperAdminProposeEventDecoder(),
  );
}
