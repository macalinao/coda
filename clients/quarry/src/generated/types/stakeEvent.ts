/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";

export interface StakeEvent {
  authority: Address;
  token: Address;
  amount: bigint;
  timestamp: bigint;
}

export interface StakeEventArgs {
  authority: Address;
  token: Address;
  amount: number | bigint;
  timestamp: number | bigint;
}

export function getStakeEventEncoder(): FixedSizeEncoder<StakeEventArgs> {
  return getStructEncoder([
    ["authority", getAddressEncoder()],
    ["token", getAddressEncoder()],
    ["amount", getU64Encoder()],
    ["timestamp", getI64Encoder()],
  ]);
}

export function getStakeEventDecoder(): FixedSizeDecoder<StakeEvent> {
  return getStructDecoder([
    ["authority", getAddressDecoder()],
    ["token", getAddressDecoder()],
    ["amount", getU64Decoder()],
    ["timestamp", getI64Decoder()],
  ]);
}

export function getStakeEventCodec(): FixedSizeCodec<
  StakeEventArgs,
  StakeEvent
> {
  return combineCodec(getStakeEventEncoder(), getStakeEventDecoder());
}
