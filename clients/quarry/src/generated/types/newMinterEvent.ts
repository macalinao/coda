/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";

export interface NewMinterEvent {
  mintWrapper: Address;
  minter: Address;
  index: bigint;
  minterAuthority: Address;
}

export interface NewMinterEventArgs {
  mintWrapper: Address;
  minter: Address;
  index: number | bigint;
  minterAuthority: Address;
}

export function getNewMinterEventEncoder(): FixedSizeEncoder<NewMinterEventArgs> {
  return getStructEncoder([
    ["mintWrapper", getAddressEncoder()],
    ["minter", getAddressEncoder()],
    ["index", getU64Encoder()],
    ["minterAuthority", getAddressEncoder()],
  ]);
}

export function getNewMinterEventDecoder(): FixedSizeDecoder<NewMinterEvent> {
  return getStructDecoder([
    ["mintWrapper", getAddressDecoder()],
    ["minter", getAddressDecoder()],
    ["index", getU64Decoder()],
    ["minterAuthority", getAddressDecoder()],
  ]);
}

export function getNewMinterEventCodec(): FixedSizeCodec<
  NewMinterEventArgs,
  NewMinterEvent
> {
  return combineCodec(getNewMinterEventEncoder(), getNewMinterEventDecoder());
}
