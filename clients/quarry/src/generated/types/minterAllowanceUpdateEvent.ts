/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  
  combineCodec,
  
  
  
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder
} from "@solana/kit";
import type {Address, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder} from "@solana/kit";

export interface MinterAllowanceUpdateEvent {
  mintWrapper: Address;
  minter: Address;
  previousAllowance: bigint;
  allowance: bigint;
}

export interface MinterAllowanceUpdateEventArgs {
  mintWrapper: Address;
  minter: Address;
  previousAllowance: number | bigint;
  allowance: number | bigint;
}

export function getMinterAllowanceUpdateEventEncoder(): FixedSizeEncoder<MinterAllowanceUpdateEventArgs> {
  return getStructEncoder([
    ["mintWrapper", getAddressEncoder()],
    ["minter", getAddressEncoder()],
    ["previousAllowance", getU64Encoder()],
    ["allowance", getU64Encoder()],
  ]);
}

export function getMinterAllowanceUpdateEventDecoder(): FixedSizeDecoder<MinterAllowanceUpdateEvent> {
  return getStructDecoder([
    ["mintWrapper", getAddressDecoder()],
    ["minter", getAddressDecoder()],
    ["previousAllowance", getU64Decoder()],
    ["allowance", getU64Decoder()],
  ]);
}

export function getMinterAllowanceUpdateEventCodec(): FixedSizeCodec<
  MinterAllowanceUpdateEventArgs,
  MinterAllowanceUpdateEvent
> {
  return combineCodec(
    getMinterAllowanceUpdateEventEncoder(),
    getMinterAllowanceUpdateEventDecoder(),
  );
}
