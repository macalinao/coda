/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  
  
  
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder
} from "@solana/kit";
import type {FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder} from "@solana/kit";

export interface RewarderAnnualRewardsUpdateEvent {
  previousRate: bigint;
  newRate: bigint;
  timestamp: bigint;
}

export interface RewarderAnnualRewardsUpdateEventArgs {
  previousRate: number | bigint;
  newRate: number | bigint;
  timestamp: number | bigint;
}

export function getRewarderAnnualRewardsUpdateEventEncoder(): FixedSizeEncoder<RewarderAnnualRewardsUpdateEventArgs> {
  return getStructEncoder([
    ["previousRate", getU64Encoder()],
    ["newRate", getU64Encoder()],
    ["timestamp", getI64Encoder()],
  ]);
}

export function getRewarderAnnualRewardsUpdateEventDecoder(): FixedSizeDecoder<RewarderAnnualRewardsUpdateEvent> {
  return getStructDecoder([
    ["previousRate", getU64Decoder()],
    ["newRate", getU64Decoder()],
    ["timestamp", getI64Decoder()],
  ]);
}

export function getRewarderAnnualRewardsUpdateEventCodec(): FixedSizeCodec<
  RewarderAnnualRewardsUpdateEventArgs,
  RewarderAnnualRewardsUpdateEvent
> {
  return combineCodec(
    getRewarderAnnualRewardsUpdateEventEncoder(),
    getRewarderAnnualRewardsUpdateEventDecoder(),
  );
}
