/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  FixedSizeCodec,
  FixedSizeDecoder,
  FixedSizeEncoder,
} from "@solana/kit";
import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
} from "@solana/kit";

export interface NewMintWrapperEvent {
  mintWrapper: Address;
  hardCap: bigint;
  admin: Address;
  tokenMint: Address;
}

export interface NewMintWrapperEventArgs {
  mintWrapper: Address;
  hardCap: number | bigint;
  admin: Address;
  tokenMint: Address;
}

export function getNewMintWrapperEventEncoder(): FixedSizeEncoder<NewMintWrapperEventArgs> {
  return getStructEncoder([
    ["mintWrapper", getAddressEncoder()],
    ["hardCap", getU64Encoder()],
    ["admin", getAddressEncoder()],
    ["tokenMint", getAddressEncoder()],
  ]);
}

export function getNewMintWrapperEventDecoder(): FixedSizeDecoder<NewMintWrapperEvent> {
  return getStructDecoder([
    ["mintWrapper", getAddressDecoder()],
    ["hardCap", getU64Decoder()],
    ["admin", getAddressDecoder()],
    ["tokenMint", getAddressDecoder()],
  ]);
}

export function getNewMintWrapperEventCodec(): FixedSizeCodec<
  NewMintWrapperEventArgs,
  NewMintWrapperEvent
> {
  return combineCodec(
    getNewMintWrapperEventEncoder(),
    getNewMintWrapperEventDecoder(),
  );
}
