/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type {
  Address,
  SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  SolanaError,
} from "@solana/kit";
import { isProgramError } from "@solana/kit";
import { QUARRY_REDEEMER_PROGRAM_ADDRESS } from "../programs/index.js";

/** Unauthorized: Unauthorized. */
export const QUARRY_REDEEMER_ERROR__UNAUTHORIZED = 0x1770; // 6000

export type QuarryRedeemerError = typeof QUARRY_REDEEMER_ERROR__UNAUTHORIZED;

let quarryRedeemerErrorMessages:
  | Record<QuarryRedeemerError, string>
  | undefined;
if (true) {
  quarryRedeemerErrorMessages = {
    [QUARRY_REDEEMER_ERROR__UNAUTHORIZED]: "Unauthorized.",
  };
}

export function getQuarryRedeemerErrorMessage(
  code: QuarryRedeemerError,
): string {
  if (true) {
    return (quarryRedeemerErrorMessages!)[
      code
    ];
  }

  return "Error message not available in production bundles.";
}

export function isQuarryRedeemerError<
  TProgramErrorCode extends QuarryRedeemerError,
>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode,
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    QUARRY_REDEEMER_PROGRAM_ADDRESS,
    code,
  );
}
