/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  
  containsBytes,
  fixEncoderSize,
  getBytesEncoder
  
} from "@solana/kit";
import type {Address, ReadonlyUint8Array} from "@solana/kit";
import type {ParsedNewRegistryInstruction, ParsedSyncQuarryInstruction} from "../instructions/index.js";

export const QUARRY_REGISTRY_PROGRAM_ADDRESS =
  "QREGBnEj9Sa5uR91AV8u3FxThgP5ZCvdZUW2bHAkfNc" as Address<"QREGBnEj9Sa5uR91AV8u3FxThgP5ZCvdZUW2bHAkfNc">;

export enum QuarryRegistryAccount {
  Registry,
}

export function identifyQuarryRegistryAccount(
  account: { data: ReadonlyUint8Array } | ReadonlyUint8Array,
): QuarryRegistryAccount {
  const data = "data" in account ? account.data : account;
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([47, 174, 110, 246, 184, 182, 252, 218]),
      ),
      0,
    )
  ) {
    return QuarryRegistryAccount.Registry;
  }
  throw new Error(
    "The provided account could not be identified as a quarryRegistry account.",
  );
}

export enum QuarryRegistryInstruction {
  NewRegistry,
  SyncQuarry,
}

export function identifyQuarryRegistryInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array,
): QuarryRegistryInstruction {
  const data = "data" in instruction ? instruction.data : instruction;
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([237, 187, 50, 70, 74, 26, 144, 230]),
      ),
      0,
    )
  ) {
    return QuarryRegistryInstruction.NewRegistry;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([48, 99, 184, 151, 219, 101, 253, 170]),
      ),
      0,
    )
  ) {
    return QuarryRegistryInstruction.SyncQuarry;
  }
  throw new Error(
    "The provided instruction could not be identified as a quarryRegistry instruction.",
  );
}

export type ParsedQuarryRegistryInstruction<
  TProgram extends string = "QREGBnEj9Sa5uR91AV8u3FxThgP5ZCvdZUW2bHAkfNc",
> =
  | ({
      instructionType: QuarryRegistryInstruction.NewRegistry;
    } & ParsedNewRegistryInstruction<TProgram>)
  | ({
      instructionType: QuarryRegistryInstruction.SyncQuarry;
    } & ParsedSyncQuarryInstruction<TProgram>);
